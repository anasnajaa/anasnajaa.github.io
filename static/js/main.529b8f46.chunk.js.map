{"version":3,"sources":["api/blog.js","components/Pagination/index.js","components/TagsUtility/index.js","components/BlogPostSimple/index.js","components/Loading/index.js","components/BlogPosts/index.js","components/BlogPostsArchive/index.js","components/BlogTopics/index.js","components/BlogNav/index.js","components/BlogPostBySlug/index.js","components/BlogPostsByTopic/index.js","components/Blog/index.js","components/Portfolio/index.js","components/Home/index.js","components/PageNotFound/index.js","components/NavBar/index.js","App.js","index.js"],"names":["API_URL","KEY","getPosts","limit","page","topic","a","fetch","response","json","getArchivePosts","getPostBySlug","slug","body","posts","getTags","getPageElement","currentPage","pageToAdd","onClick","isLoading","Item","disabled","key","v4","active","Spinner","as","animation","size","role","aria-hidden","Ellipsis","Pagination","pg","onNextClick","onPreviousClick","onPageClick","pages","Prev","Next","pagObj","l","current","last","left","right","range","i","push","forEach","getPages","TagsStyleResolver","id","backgroundColor","color","TagsBuilder","tags","length","className","style","marginLeft","map","name","to","Badge","BlogPostSimple","post","Card","Img","variant","src","feature_image","Body","Title","title","Subtitle","OverlayTrigger","placement","overlay","Tooltip","date","published_at","format","fromNow","Text","custom_excerpt","Loading","getQueryParams","history","params","qs","parse","location","search","ignoreQueryPrefix","p","parseInt","withRouter","useState","topicTitle","setTopicTitle","error","setError","isLoaded","setIsLoaded","setPosts","pagination","setPagination","setCurrentPage","buildUrl","baseUrl","getBlogPosts","meta","filter","x","useEffect","listen","Row","Col","message","xs","sm","md","lg","xl","selectPageNumber","BlogPostsArchive","props","state","filteredPosts","postsElements","searchText","this","setState","year","month","colSpan","currentMonth","currentYear","elementsList","datePublished","Moment","postMonth","postYear","toLowerCase","indexOf","monthYearElement","postElement","populatePostsList","Form","Group","controlId","Control","type","placeholder","value","onChange","e","target","Table","striped","bordered","hover","React","Component","BlogTopics","setTags","populateTags","ListGroup","description","count","BlogNav","isTabletOrMobile","useMediaQuery","query","Nav","Link","match","setPost","getBlogPost","console","log","dangerouslySetInnerHTML","__html","html","BlogPostsByTopic","useParams","Blog","path","exact","Portfolio","Home","Jumbotron","textDecoration","href","icon","faTwitter","faLinkedin","faGithub","faEnvelope","NavigationBar","Navbar","bg","expand","Container","Brand","Toggle","aria-controls","Collapse","App","PageNotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.529b8f46.chunk.js","sourcesContent":["const API_KEY   = \"9c8569eb29d07e9f4b3819310d\"; //for public content only\nconst API_URL   = \"https://hecked-blog.herokuapp.com/ghost/api/v3/content\";\nconst KEY       = `key=${API_KEY}`\n\nexport async function getPosts(limit, page, topic) {\n    try {\n        const response = await fetch(`${API_URL}/posts/?${KEY}&` +\n            `fields=id,title,slug,custom_excerpt,reading_time,feature_image,`+\n            `created_at,updated_at,published_at,meta&include=tags&limit=${limit}&page=${page}&`+\n            `${topic ? `filter=tag:${topic}`:\"\"}`);\n        return await response.json();\n    } catch (error) {\n        return [];\n    }\n}\n\nexport async function getArchivePosts() {\n    try {\n        const response = await fetch(`${API_URL}/posts/?${KEY}&` +\n            `fields=id,title,slug,published_at,tags.id&limit=all`);\n        return await response.json();\n    } catch (error) {\n        return [];\n    }\n}\n\nexport async function getPostBySlug(slug) {\n    try {\n        const response = await fetch(`${API_URL}/posts/slug/${slug}?${KEY}&include=tags&` +\n            \"fields=id,title,slug,html,reading_time,feature_image,created_at,updated_at,published_at\");\n        const body = await response.json();\n        return body.posts[0];\n    } catch (error) {\n        return [];\n    }\n}\n\nexport async function getSettings() {\n    try {\n        const response = await fetch(`${API_URL}/settings/?${KEY}`);\n        const body = await response.json();\n        return body;\n    } catch (error) {\n        return [];\n    }\n}\n\nexport async function getTags() {\n    try {\n        const response = await fetch(`${API_URL}/tags/?${KEY}&` +\n        `&include=count.posts&limit=all&filter=visibility:public`);\n        const body = await response.json();\n        return body;\n    } catch (error) {\n        return [];\n    }\n}","import React from 'react';\nimport { Pagination as Pg, Spinner } from 'react-bootstrap';\nimport { v4 } from 'uuid';\n\nconst getPageElement = (currentPage, pageToAdd, onClick, isLoading) => {\n    if(currentPage === pageToAdd) {\n        return (\n            <Pg.Item disabled={isLoading} key={v4()} active>\n            {!isLoading ? pageToAdd:\n                <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n            }\n            </Pg.Item>\n        );\n    } else if (pageToAdd === \"...\") {\n        return (\n            <Pg.Ellipsis disabled key={v4()} />\n        );\n    } else {\n        return (\n            <Pg.Item disabled={isLoading} onClick={()=>{onClick(pageToAdd)}} key={v4()}>\n                {pageToAdd}\n            </Pg.Item>\n        );\n    }\n}\n\nconst getPages = (pagObj, onClick, isLoading)=>{\n    const current = pagObj.page;\n    let last = pagObj.pages;\n    let width = 1;\n    const left = current - width;\n    const right = current + width + 1;\n    const range = [];\n    const pages = [];\n    let l;\n  \n    for (let i = 1; i <= last; i += 1) {\n      if (i === 1 || i === last || (i >= left && i <= right)) {\n        range.push(i);\n      } else if (i < left) {\n        i = left - 1;\n      } else if (i > right) {\n        range.push(last);\n        break;\n      }\n    }\n  \n    range.forEach(i => {\n      if (l) {\n        if (i - l === 2) {\n            pages.push(getPageElement(\n            current, \n            l + 1,\n            onClick,\n            isLoading));\n        } else if (i - l !== 1) {\n            pages.push(getPageElement(\n                current, \n                '...',\n                onClick,\n                isLoading));\n        }\n      }\n      pages.push(getPageElement(\n        current, \n        i,\n        onClick,\n        isLoading));\n      l = i;\n    });\n  \n    return pages;\n}\n\nconst Pagination = ({ pg, isLoading, onNextClick, onPreviousClick, onPageClick }) => {\n    return (\n        <Pg size=\"sm\">\n            {pg && pg.pages && pg.pages > 0 ?\n            <>\n                {pg.pages === 1 ?\n                <>\n                <Pg.Prev disabled />\n                    <Pg.Item disabled>1</Pg.Item>\n                <Pg.Next disabled />\n                </>\n                :\n                <>\n                    <Pg.Prev disabled={isLoading || pg.page === 1} onClick={()=>{onPreviousClick()}} />\n                        {getPages(pg, onPageClick, isLoading)}\n                    <Pg.Next disabled={isLoading || pg.pages === pg.page} onClick={()=>{onNextClick()}}/>\n                </>}\n            </>\n            :\n            <>\n                {isLoading ? \n                <>\n                    <Pg.Item disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Pg.Item>\n                </>\n                :\n                <>\n                    <Pg.Prev disabled />\n                        <Pg.Item disabled>None</Pg.Item>\n                    <Pg.Next disabled />\n                </>}\n            </>}\n        </Pg>\n    );\n}\n\nexport default Pagination;","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport const TagsStyleResolver = (id) => {\n  if (id === \"5f86bc611488fc001eea51ae\") {\n    return { backgroundColor: \"red\", color: \"white\" };\n  }\n  if (id === \"5f8a7e4a11e139001eb1d5d2\") {\n    return { backgroundColor: \"blue\", color: \"white\" };\n  }\n  if (id === \"5f7f519ecbab9f001ede0c9b\") {\n    return { backgroundColor: \"green\", color: \"white\" };\n  }\n  if (id === \"5f8a7f6d11e139001eb1d5d6\") {\n    return { backgroundColor: \"purple\", color: \"white\" };\n  }\n};\n\nexport const TagsBuilder = ({tags}) => {\n  return (\n    <>\n      {tags.length > 0 ? (\n          <small className=\"text-muted pb-2\" style={{ marginLeft: \"1.25rem\" }}>\n            {tags.map(({ name, slug, id }) => (\n              <LinkContainer style={TagsStyleResolver(id)} key={id} to={`/blog/topics/${slug}`}>\n                <Badge className=\"mr-2 p-1 cursor-pointer\">\n                  {name}\n                </Badge>\n              </LinkContainer>\n            ))}\n          </small>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Card, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { TagsBuilder } from \"../TagsUtility/index\";\n\nconst BlogPostSimple = ({ post }) => {\n  return (\n    <Card className=\"mb-2\">\n      <LinkContainer className=\"cursor-pointer\" to={`/blog/posts/${post.slug}`}>\n        <Card.Img variant=\"top\" src={post.feature_image} />\n      </LinkContainer>\n      <LinkContainer className=\"cursor-pointer\" to={`/blog/posts/${post.slug}`}>\n        <Card.Body className=\"pb-0\">\n          <Card.Title>{post.title}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={\n                <Tooltip>\n                  <Moment\n                    date={post.published_at}\n                    format=\"DD/MM/YYYY hh:mm A\"\n                  />\n                </Tooltip>\n              }\n            >\n              <Moment date={post.published_at} fromNow />\n            </OverlayTrigger>\n          </Card.Subtitle>\n          <Card.Text>{post.custom_excerpt}</Card.Text>\n        </Card.Body>\n      </LinkContainer>\n      <TagsBuilder tags={post.tags} />\n    </Card>\n  );\n};\n\nexport default BlogPostSimple;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loading = () => {\n    return (\n        <span>\n    <Spinner\n      as=\"span\"\n      animation=\"border\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n      className=\"mr-2\"\n    />\n    Loading, please wait...\n        </span>\n    )\n};\n\nexport default Loading;","import React, { useEffect, useState } from \"react\";\nimport { getPosts } from \"../../api/blog\";\nimport Pagination from \"../Pagination/index\";\nimport BlogPostSimple from \"../BlogPostSimple/index\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Loading from \"../Loading/index\";\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\n\nconst getQueryParams = (history)=>{\n  let params =  qs.parse(history.location.search, { ignoreQueryPrefix: true });\n  return {\n    p: params.p ? parseInt(params.p) : null\n  }\n}\n\nconst BlogPosts = ({ topic, history }) => {\n  const [topicTitle, setTopicTitle] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [pagination, setPagination] = useState(null);\n  const [currentPage, setCurrentPage] = useState(getQueryParams(history).p || 1);\n  \n  const buildUrl = (page)=>{\n    let baseUrl = \"\";\n    if(topic){\n      baseUrl=`/blog/topics/${topic}`;\n    } else {\n      baseUrl=`/blog`;\n    }\n    return `${baseUrl}?p=${page}`;\n  }\n\n  const getBlogPosts = async (page, topic) => {\n    try {\n      const response = await getPosts(5, page || 1, topic);\n      setError(null);\n      setPosts(response.posts);\n      setPagination(response.meta.pagination);\n      // grab topic title from one of the posts\n      if(topic){\n        const title = response.posts[0].tags.filter(x=>x.slug===topic)[0].name;\n        setTopicTitle(title);\n      }\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoaded(true);\n    }\n  };\n\n  const updateCurrentPage = (page) => {\n    setCurrentPage(page);\n    setIsLoaded(false);\n  };\n\n  useEffect(() => history.listen(() => {\n    const params = getQueryParams(history);\n    //const params =  qs.parse(history.location.search, { ignoreQueryPrefix: true });\n    updateCurrentPage(params.p);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }), []);\n\n  useEffect(()=>{\n    getBlogPosts(currentPage, topic);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, topic]);\n\n  if (error) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <div>Error: {error.message}</div>\n        </Col>\n      </Row>\n    );\n  } else if (!isLoaded) {\n    return (\n      <Row>\n        {topic &&\n        <Col xs={12}>\n          <h3><i>{topicTitle}</i></h3>\n        </Col>}\n        <Col className=\"text-center\">\n          <Loading />\n        </Col>\n      </Row>\n    );\n  } else {\n    return (\n      <Row>\n        {topic &&\n        <Col xs={12}>\n          <h3><i>{topicTitle}</i></h3>\n        </Col>}\n        {posts.map((post) => (\n          <Col  key={post.id} xs={12} sm={12} md={12} lg={12} xl={12}>\n            <BlogPostSimple post={post} />\n          </Col>\n        ))}\n\n        <Col xs={12} sm={12} md={4} lg={4} xl={4} />\n        <Col className=\"text-center\" xs={12} sm={12} md={4} lg={4} xl={4}>\n          <Pagination\n            pg={pagination}\n            onNextClick={() => {\n              history.push(buildUrl(currentPage + 1));\n              //updateCurrentPage(currentPage + 1);\n            }}\n            onPreviousClick={() => {\n              history.push(buildUrl(currentPage - 1));\n              //updateCurrentPage(currentPage - 1);\n            }}\n            onPageClick={(selectPageNumber) => {\n              history.push(buildUrl(selectPageNumber));\n              //updateCurrentPage(selectPageNumber);\n            }}\n            isLoading={!isLoaded}\n          />\n        </Col>\n        <Col xs={12} sm={12} md={4} lg={4} xl={4} />\n      </Row>\n    );\n  }\n};\n\nexport default withRouter(BlogPosts);\n","import React from \"react\";\nimport { getArchivePosts } from \"../../api/blog\";\nimport { Row, Col, Table, Form } from \"react-bootstrap\";\nimport Loading from \"../Loading/index\";\nimport { v4 } from \"uuid\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport ReactMoment from 'react-moment';\nimport Moment from 'moment';\n\nclass BlogPostsArchive extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: [],\n      filteredPosts: [],\n      postsElements: [],\n      searchText: \"\",\n    };\n  }\n\n  async getBlogPosts() {\n    try {\n      const response = await getArchivePosts();\n      this.setState({\n        error: null,\n        isLoaded: true,\n        posts: [...response.posts],\n        filteredPosts: [...response.posts]\n      }, ()=>{ return response.posts; });\n    } catch (error) {\n      this.setState({\n        error: error,\n        isLoaded: true\n      }, ()=>{ return []; });\n    }\n  }\n\n  monthYearElement(year, month) {\n    return (\n        <tr className=\"bg-secondary text-white\" key={v4()}><td colSpan=\"3\">\n            <strong>{year}-{month}</strong>\n        </td></tr>\n    );\n  }\n\n  postElement({id, published_at, slug, title}){\n      return (\n        <tr key={id}>\n            <td>\n            <ReactMoment date={published_at} format=\"DD\" />\n            </td>\n            <td>\n            <LinkContainer className=\"cursor-pointer\" key={v4()} to={`/blog/posts/${slug}`}>\n                <span>{title}</span>\n            </LinkContainer>\n            </td>\n        </tr>\n      );\n  }\n\n  populatePostsList() {\n    let currentMonth = null;\n    let currentYear = null;\n    const elementsList = [];\n\n    this.state.posts.forEach((post) => {\n      const datePublished = new Moment(post.published_at);\n      const postMonth = datePublished.month();\n      const postYear = datePublished.year();\n\n      if (post.title.toLowerCase().indexOf(this.state.searchText.toLowerCase()) === -1) return;\n\n      if (postMonth !== currentMonth || postYear !== currentYear) {\n        currentMonth = postMonth;\n        currentYear = postYear;\n        elementsList.push(\n          this.monthYearElement(currentYear,  datePublished.format(\"MMMM\"))\n        );\n      }\n      elementsList.push(this.postElement(post));\n    });\n\n    this.setState({\n      postsElements: [...elementsList],\n    });\n  }\n\n  async componentDidMount() {\n    await this.getBlogPosts();\n    this.populatePostsList();\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Row>\n          <Col className=\"text-center\">\n            <div>Error: {this.state.error.message}</div>\n          </Col>\n        </Row>\n      );\n    } else if (!this.state.isLoaded) {\n      return (\n        <Row>\n          <Col className=\"text-center\">\n            <Loading />\n          </Col>\n        </Row>\n      );\n    } else {\n      return (\n        <Row>\n          <Col xs={12}>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control \n              type=\"text\" \n              placeholder=\"Filter by Title\" \n              value={this.state.searchText}\n              onChange={(e)=>{\n                this.setState({\n                  searchText: e.target.value\n                }, ()=>{\n                  this.populatePostsList();\n                });\n              }}\n              />\n            </Form.Group>\n            </Form>\n          </Col>\n          <Col xs={12}>\n          <Table striped bordered hover size=\"sm\">\n            <tbody>\n            {this.state.postsElements}\n            </tbody>\n            </Table>\n            </Col>\n        </Row>\n      );\n    }\n  }\n}\n\nexport default BlogPostsArchive;\n","import React, { useEffect, useState } from \"react\";\nimport { ListGroup, Row, Col, Badge } from \"react-bootstrap\";\nimport { getTags } from \"../../api/blog\";\nimport Loading from \"../Loading/index\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst BlogTopics = () => {\n  const [tags, setTags] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  const populateTags = async () => {\n    try {\n      const response = await getTags();\n      setTags(response.tags);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    populateTags();\n  }, []);\n\n  if (error) {\n    return (\n      <Row>\n        <Col>Error: {error}</Col>\n      </Row>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Loading />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <Row>\n      <Col>\n        <ListGroup>\n          {tags.map(({ id, description, name, slug, count }) => {\n            return (\n              <LinkContainer\n                className=\"cursor-pointer\"\n                key={id}\n                to={`/blog/topics/${slug}`}\n              >\n                <ListGroup.Item>\n                  {name}&nbsp;&nbsp;\n                  <Badge variant=\"light\">{count.posts}</Badge>\n                </ListGroup.Item>\n              </LinkContainer>\n            );\n          })}\n        </ListGroup>\n      </Col>\n    </Row>\n  );\n};\n\nexport default BlogTopics;\n","import React from \"react\";\nimport { Row, Col, Nav } from \"react-bootstrap\";\nimport { IndexLinkContainer } from \"react-router-bootstrap\";\nimport { useMediaQuery } from 'react-responsive';\n\nconst BlogNav = () => {\n  //let { path } = useRouteMatch();\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\n  return (\n    <Row>\n        <Col xs={12} className=\"mb-3\">\n          <Nav className={isTabletOrMobile?\"\":\"flex-column\"} >\n            <Nav.Item>\n              <IndexLinkContainer to={`/blog`}>\n                <Nav.Link>Blog</Nav.Link>\n              </IndexLinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <IndexLinkContainer to={`/blog/topics`}>\n                <Nav.Link>Topics</Nav.Link>\n              </IndexLinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <IndexLinkContainer to={`/blog/archive`}>\n                <Nav.Link>Archive</Nav.Link>\n              </IndexLinkContainer>\n            </Nav.Item>\n          </Nav>\n        </Col>\n    </Row>\n  );\n};\n\nexport default BlogNav;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Row, Col, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { getPostBySlug } from \"../../api/blog\";\nimport Loading from \"../Loading/index\";\nimport Moment from \"react-moment\";\nimport { TagsBuilder } from '../TagsUtility/index';\n\nconst BlogPostBySlug = ({ match, location, history }) => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [post, setPost] = useState(null);\n\n  // width: 100%;\n  // margin: 20px 0;\n  //   function loadComments(post: PostType) {\n  //     setEnableLoadComments(false);\n  //     (window as any).disqus_config = function () {\n  //         this.page.url = window.location.href;\n  //         this.page.identifier = post.id;\n  //     };\n\n  //     const script = document.createElement('script');\n  //     script.src = 'https://hecked-blog.disqus.com/embed.js';\n  //     script.setAttribute('data-timestamp', Date.now().toString());\n  //     document.body.appendChild(script);\n  // }\n\n  const getBlogPost = async (slug) => {\n    try {\n      const response = await getPostBySlug(slug);\n      console.log(response);\n      setError(null);\n      setPost({ ...response });\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    getBlogPost(match.params.slug);\n  }, [match.params.slug]);\n\n  if (error) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <div>Error: {error.message}</div>\n        </Col>\n      </Row>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Loading />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <Row>\n      <Col className=\"mb-4\">\n        <h1>\n          <b>{post.title}</b>\n        </h1>\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={\n              <Tooltip>\n                <Moment date={post.published_at} format=\"DD/MM/YYYY hh:mm A\" />\n              </Tooltip>\n            }\n          >\n            <small>\n            Published  <Moment date={post.published_at} fromNow />\n            </small>\n          </OverlayTrigger><br/>\n        <small><i>Tags </i></small><TagsBuilder tags={post.tags} />\n      </Col>\n      <Col xs={12}>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default withRouter(BlogPostBySlug);\n","import React from \"react\";\nimport BlogPosts from '../BlogPosts/index';\nimport { useParams } from 'react-router-dom';\n\nconst BlogPostsByTopic = () => {\n    const { topic } = useParams();\n    return(<BlogPosts topic={topic} />);\n}\n\nexport default BlogPostsByTopic;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport BlogPosts from \"../BlogPosts/index\";\nimport { Row, Col } from \"react-bootstrap\";\nimport BlogPostsArchive from \"../BlogPostsArchive/index\";\nimport BlogTopics from \"../BlogTopics/index\";\nimport BlogNav from \"../BlogNav/index\";\nimport BlogPostBySlug from \"../BlogPostBySlug/index\";\nimport BlogPostsByTopic from '../BlogPostsByTopic/index';\n\nfunction Blog() {\n  return (\n    <Row>\n      <Col xs={12} sm={12} md={12} lg={2} xl={2}>\n        <BlogNav />\n      </Col>\n      <Col xs={12} sm={12} md={12} lg={10} xl={10}>\n        <Switch>\n          <Route path={`/blog/topics/:topic`}>\n            <BlogPostsByTopic />\n          </Route>\n          <Route path={`/blog/archive`}>\n            <BlogPostsArchive />\n          </Route>\n          <Route path={`/blog/topics`}>\n            <BlogTopics />\n          </Route>\n          <Route path={`/blog/posts/:slug`}>\n            <BlogPostBySlug />\n          </Route>\n          <Route exact path={`/blog`}>\n            <BlogPosts />\n          </Route>\n        </Switch>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Blog;\n","import React from 'react';\n\nconst Portfolio = () => {\n    return (\n        <span>Under Construction.</span>\n    )\n};\n\nexport default Portfolio;","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter, faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nconst Home = () => {\n    return (\n        <Jumbotron>\n        <h1>Hi, I'm Anas Najaa.</h1>\n        <p>\n            I'm a software developer based in Kuwait.<br/>\n            I'm currently interested in building simple to use APIs and SPAs.<br/>\n            <br/>\n            <a style={{textDecoration: \"none\", color:\"#1DA1F2\"}} className=\"h4\" href=\"https://twitter.com/spidernet12\">\n                <FontAwesomeIcon icon={faTwitter} />\n            </a>\n            <span>&nbsp;&nbsp;</span>\n            <a style={{textDecoration: \"none\", color:\"#2867B2\"}} className=\"h4\" href=\"https://www.linkedin.com/in/anasnajaa\">\n                <FontAwesomeIcon icon={faLinkedin} />\n            </a>\n            <span>&nbsp;&nbsp;</span>\n            <a style={{textDecoration: \"none\", color:\"#24292e\"}} className=\"h4\" href=\"https://github.com/anasnajaa\">\n                <FontAwesomeIcon icon={faGithub} />\n            </a>\n            <span>&nbsp;&nbsp;</span>\n            <a style={{textDecoration: \"none\", color:\"#D44638\"}} className=\"h4\" href=\"mailto:anas.najaa@outlook.com\">\n                <FontAwesomeIcon icon={faEnvelope} />\n            </a>\n        </p>\n        \n        </Jumbotron>\n    )\n};\n\nexport default Home;","import React from \"react\";\n\nconst Portfolio = () => {\n  return (\n    <>\n      <span>404 Error</span>\n      <span>Page Not Found</span>\n    </>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { IndexLinkContainer, LinkContainer } from \"react-router-bootstrap\";\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst NavigationBar = () => (\n  <Navbar className=\"fixed-top\" bg=\"light\" expand=\"lg\">\n    <Container>\n      <IndexLinkContainer to=\"/\">\n        <Navbar.Brand>Anas Najaa</Navbar.Brand>\n      </IndexLinkContainer>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <IndexLinkContainer to=\"/\">\n            <Nav.Link>Home</Nav.Link>\n          </IndexLinkContainer>\n          <LinkContainer to=\"/blog\">\n            <Nav.Link>Blog</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/portfolio\">\n            <Nav.Link>Portfolio</Nav.Link>\n          </LinkContainer>\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n);\n\nexport default NavigationBar;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./App.scss\";\n\nimport Blog from \"./components/Blog/index\";\nimport Portfolio from \"./components/Portfolio/index\";\nimport Home from \"./components/Home/index\";\nimport PageNotFound from './components/PageNotFound/index';\nimport NavigationBar from './components/NavBar';\n\nconst App = () => (\n  <Router>\n    <NavigationBar/>\n    <Container className=\"p-3 mt-5\">\n      <Switch>\n        <Route exact path=\"/\"><Home /></Route>\n        <Route path=\"/blog\"><Blog /></Route>\n        <Route path=\"/portfolio\"><Portfolio /></Route>\n        <Route path=\"*\">\n            <PageNotFound />\n        </Route>\n      </Switch>\n    </Container>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  //<React.StrictMode> temporary fix for bootstrap warnings\n    <App />\n  //</React.StrictMode>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}