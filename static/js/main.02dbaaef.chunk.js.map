{"version":3,"sources":["api/blog.js","components/Pagination/index.js","components/TagsUtility/index.js","components/BlogPostSimple/index.js","components/Loading/index.js","components/BlogPosts/index.js","components/BlogPostsArchive/index.js","components/BlogTopics/index.js","components/BlogNav/index.js","components/BlogPostsByTopic/index.js","components/Blog/index.js","components/Portfolio/index.js","components/Home/index.js","components/PageNotFound/index.js","components/NavBar/index.js","components/BlogPostBySlug/index.js","App.js","index.js"],"names":["API_URL","KEY","getPosts","limit","page","topic","a","fetch","response","json","getArchivePosts","getPostBySlug","slug","body","posts","getTags","getPageElement","currentPage","pageToAdd","onClick","isLoading","Item","disabled","key","v4","active","Spinner","as","animation","size","role","aria-hidden","Ellipsis","Pagination","pg","onNextClick","onPreviousClick","onPageClick","pages","Prev","Next","pagObj","l","current","last","left","right","range","i","push","forEach","getPages","TagsStyleResolver","id","backgroundColor","color","BlogPostSimple","post","Card","className","Img","variant","src","feature_image","Body","Title","title","Subtitle","OverlayTrigger","placement","overlay","Tooltip","date","published_at","format","fromNow","Text","custom_excerpt","tags","length","style","paddingLeft","map","name","to","Badge","Loading","BlogPosts","useState","topicTitle","setTopicTitle","error","setError","isLoaded","setIsLoaded","setPosts","pagination","setPagination","setCurrentPage","getBlogPosts","meta","filter","x","updateCurrentPage","useEffect","Row","Col","message","xs","sm","md","lg","xl","selectPageNumber","BlogPostsArchive","props","state","filteredPosts","postsElements","searchText","this","setState","year","month","colSpan","currentMonth","currentYear","elementsList","datePublished","Moment","postMonth","postYear","toLowerCase","indexOf","monthYearElement","postElement","populatePostsList","Form","Group","controlId","Control","type","placeholder","value","onChange","e","target","Table","striped","bordered","hover","React","Component","BlogTopics","setTags","populateTags","console","log","ListGroup","description","count","BlogNav","path","useRouteMatch","Nav","defaultActiveKey","Link","BlogPostsByTopic","useParams","Blog","Container","exact","Portfolio","Home","Jumbotron","textDecoration","href","icon","faTwitter","faLinkedin","faGithub","faEnvelope","NavigationBar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","BlogPostBySlug","params","match","getBlogPost","dangerouslySetInnerHTML","__html","html","withRouter","App","PageNotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02dbaaef.chunk.js","sourcesContent":["const API_KEY   = \"9c8569eb29d07e9f4b3819310d\"; //for public content only\nconst API_URL   = \"https://hecked-blog.herokuapp.com/ghost/api/v3/content\";\nconst KEY       = `key=${API_KEY}`\n\nexport async function getPosts(limit, page, topic) {\n    try {\n        const response = await fetch(`${API_URL}/posts/?${KEY}&` +\n            `fields=id,title,slug,custom_excerpt,reading_time,feature_image,`+\n            `created_at,updated_at,published_at,meta&include=tags&limit=${limit}&page=${page}&`+\n            `${topic ? `filter=tag:${topic}`:\"\"}`);\n        return await response.json();\n    } catch (error) {\n        return [];\n    }\n}\n\nexport async function getArchivePosts() {\n    try {\n        const response = await fetch(`${API_URL}/posts/?${KEY}&` +\n            `fields=id,title,slug,published_at,tags.id&limit=all`);\n        return await response.json();\n    } catch (error) {\n        return [];\n    }\n}\n\nexport async function getPostBySlug(slug) {\n    try {\n        const response = await fetch(`${API_URL}/posts/slug/${slug}?${KEY}&` +\n            \"fields=id,title,slug,html,reading_time,feature_image,created_at,updated_at,published_at\");\n        const body = await response.json();\n        return body.posts[0];\n    } catch (error) {\n        return [];\n    }\n}\n\nexport async function getSettings() {\n    try {\n        const response = await fetch(`${API_URL}/settings/?${KEY}`);\n        const body = await response.json();\n        return body;\n    } catch (error) {\n        return [];\n    }\n}\n\nexport async function getTags() {\n    try {\n        const response = await fetch(`${API_URL}/tags/?${KEY}&` +\n        `&include=count.posts&limit=all&filter=visibility:public`);\n        const body = await response.json();\n        return body;\n    } catch (error) {\n        return [];\n    }\n}","import React from 'react';\nimport { Pagination as Pg, Spinner } from 'react-bootstrap';\nimport { v4 } from 'uuid';\n\nconst getPageElement = (currentPage, pageToAdd, onClick, isLoading) => {\n    if(currentPage === pageToAdd) {\n        return (\n            <Pg.Item disabled={isLoading} key={v4()} active>\n            {!isLoading ? pageToAdd:\n                <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n            }\n            </Pg.Item>\n        );\n    } else if (pageToAdd === \"...\") {\n        return (\n            <Pg.Ellipsis disabled key={v4()} />\n        );\n    } else {\n        return (\n            <Pg.Item disabled={isLoading} onClick={()=>{onClick(pageToAdd)}} key={v4()}>\n                {pageToAdd}\n            </Pg.Item>\n        );\n    }\n}\n\nconst getPages = (pagObj, onClick, isLoading)=>{\n    const current = pagObj.page;\n    let last = pagObj.pages;\n    let width = 1;\n    const left = current - width;\n    const right = current + width + 1;\n    const range = [];\n    const pages = [];\n    let l;\n  \n    for (let i = 1; i <= last; i += 1) {\n      if (i === 1 || i === last || (i >= left && i <= right)) {\n        range.push(i);\n      } else if (i < left) {\n        i = left - 1;\n      } else if (i > right) {\n        range.push(last);\n        break;\n      }\n    }\n  \n    range.forEach(i => {\n      if (l) {\n        if (i - l === 2) {\n            pages.push(getPageElement(\n            current, \n            l + 1,\n            onClick,\n            isLoading));\n        } else if (i - l !== 1) {\n            pages.push(getPageElement(\n                current, \n                '...',\n                onClick,\n                isLoading));\n        }\n      }\n      pages.push(getPageElement(\n        current, \n        i,\n        onClick,\n        isLoading));\n      l = i;\n    });\n  \n    return pages;\n}\n\nconst Pagination = ({ pg, isLoading, onNextClick, onPreviousClick, onPageClick }) => {\n    return (\n        <Pg size=\"sm\">\n            {pg && pg.pages && pg.pages > 0 ?\n            <>\n                {pg.pages === 1 ?\n                <>\n                <Pg.Prev disabled />\n                    <Pg.Item disabled>1</Pg.Item>\n                <Pg.Next disabled />\n                </>\n                :\n                <>\n                    <Pg.Prev disabled={isLoading || pg.page === 1} onClick={()=>{onPreviousClick()}} />\n                        {getPages(pg, onPageClick, isLoading)}\n                    <Pg.Next disabled={isLoading || pg.pages === pg.page} onClick={()=>{onNextClick()}}/>\n                </>}\n            </>\n            :\n            <>\n                {isLoading ? \n                <>\n                    <Pg.Item disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Pg.Item>\n                </>\n                :\n                <>\n                    <Pg.Prev disabled />\n                        <Pg.Item disabled>None</Pg.Item>\n                    <Pg.Next disabled />\n                </>}\n            </>}\n        </Pg>\n    );\n}\n\nexport default Pagination;","export const TagsStyleResolver = (id) => {\n    if(id === \"5f86bc611488fc001eea51ae\"){\n        return {backgroundColor: \"\", color: \"#16063A\"};\n    }\n    if(id === \"5f8a7e4a11e139001eb1d5d2\"){\n        return {backgroundColor: \"\", color: \"#2A0238\"};\n    }\n    if(id === \"5f7f519ecbab9f001ede0c9b\"){\n        return {backgroundColor: \"\", color: \"#4F5400\"};\n    }\n    if(id === \"5f8a7f6d11e139001eb1d5d6\"){\n        return {backgroundColor: \"\", color: \"003925\"};\n    }\n}","import React from 'react';\nimport { Card, OverlayTrigger, Tooltip, Badge } from 'react-bootstrap';\nimport Moment from 'react-moment';\nimport { TagsStyleResolver } from '../TagsUtility/index';\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst BlogPostSimple = ({post}) => {\n    return (\n        <Card className=\"mb-2\">\n            <Card.Img variant=\"top\" src={post.feature_image} />\n            <Card.Body className=\"pb-0\">\n                <Card.Title>{post.title}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                    <OverlayTrigger placement=\"top\" overlay={\n                        <Tooltip>\n                            <Moment date={post.published_at} format=\"DD/MM/YYYY hh:mm A\" />\n                        </Tooltip>\n                    }>\n                        <Moment date={post.published_at} fromNow />\n                    </OverlayTrigger>\n                </Card.Subtitle>\n                <Card.Text>{post.custom_excerpt}</Card.Text>\n            </Card.Body>\n            {post.tags.length > 0 ?\n            <div style={{paddingLeft: \"1.25rem\"}} className=\"pb-2\">\n                <small className=\"text-muted\">\n                {post.tags.map(({name, slug, id}) => (\n                    <LinkContainer key={id} to={`/blog/topic/${slug}`}>\n                        <Badge className=\"mr-2 cursor-pointer\" style={TagsStyleResolver(id)}>{name}</Badge>\n                    </LinkContainer>\n                ))}\n                </small>\n            </div> : <></>}\n        </Card>\n    )\n};\n\nexport default BlogPostSimple;","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loading = () => {\n    return (\n        <span>\n    <Spinner\n      as=\"span\"\n      animation=\"border\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n      className=\"mr-2\"\n    />\n    Loading, please wait...\n        </span>\n    )\n};\n\nexport default Loading;","import React, { useEffect, useState } from \"react\";\nimport { getPosts } from \"../../api/blog\";\nimport Pagination from \"../Pagination/index\";\nimport BlogPost from \"../BlogPostSimple/index\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Loading from \"../Loading/index\";\n\nconst BlogPosts = ({topic}) => {\n  const [topicTitle, setTopicTitle] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [pagination, setPagination] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const getBlogPosts = async (page, topic) => {\n    try {\n      const response = await getPosts(5, page, topic);\n      setError(null);\n      setPosts(response.posts);\n      setPagination(response.meta.pagination);\n\n      if(topic){\n        const title = response.posts[0].tags.filter(x=>x.slug===topic)[0].name;\n        setTopicTitle(title);\n      }\n\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoaded(true);\n    }\n  };\n\n  const updateCurrentPage = (page) => {\n    setCurrentPage(page);\n    setIsLoaded(false);\n  };\n\n  useEffect(()=>{\n    getBlogPosts(currentPage, topic);\n  }, [currentPage, topic]);\n\n  if (error) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <div>Error: {error.message}</div>\n        </Col>\n      </Row>\n    );\n  } else if (!isLoaded) {\n    return (\n      <Row>\n        {topic &&\n        <Col xs={12}>\n          <h3><i>{topicTitle}</i></h3>\n        </Col>}\n        <Col className=\"text-center\">\n          <Loading />\n        </Col>\n      </Row>\n    );\n  } else {\n    return (\n      <Row>\n        {topic &&\n        <Col xs={12}>\n          <h3><i>{topicTitle}</i></h3>\n        </Col>}\n        {posts.map((post) => (\n          <Col key={post.id} xs={12} sm={12} md={12} lg={12} xl={12}>\n            <BlogPost post={post} />\n          </Col>\n        ))}\n        <Col xs={12} sm={12} md={4} lg={4} xl={4} />\n        <Col className=\"text-center\" xs={12} sm={12} md={4} lg={4} xl={4}>\n          <Pagination\n            pg={pagination}\n            onNextClick={() => {\n              updateCurrentPage(currentPage + 1);\n            }}\n            onPreviousClick={() => {\n              updateCurrentPage(currentPage - 1);\n            }}\n            onPageClick={(selectPageNumber) => {\n              updateCurrentPage(selectPageNumber);\n            }}\n            isLoading={!isLoaded}\n          />\n        </Col>\n        <Col xs={12} sm={12} md={4} lg={4} xl={4} />\n      </Row>\n    );\n  }\n};\n\nexport default BlogPosts;\n","import React from \"react\";\nimport { getArchivePosts } from \"../../api/blog\";\nimport { Row, Col, Table, Form } from \"react-bootstrap\";\nimport Loading from \"../Loading/index\";\nimport { v4 } from \"uuid\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport ReactMoment from 'react-moment';\nimport Moment from 'moment';\n\nclass BlogPostsArchive extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: [],\n      filteredPosts: [],\n      postsElements: [],\n      searchText: \"\",\n    };\n  }\n\n  async getBlogPosts() {\n    try {\n      const response = await getArchivePosts();\n      this.setState({\n        error: null,\n        isLoaded: true,\n        posts: [...response.posts],\n        filteredPosts: [...response.posts]\n      }, ()=>{ return response.posts; });\n    } catch (error) {\n      this.setState({\n        error: error,\n        isLoaded: true\n      }, ()=>{ return []; });\n    }\n  }\n\n  monthYearElement(year, month) {\n    return (\n        <tr className=\"bg-secondary text-white\" key={v4()}><td colSpan=\"3\">\n            <strong>{year}-{month}</strong>\n        </td></tr>\n    );\n  }\n\n  postElement({id, published_at, slug, title}){\n      return (\n        <tr key={id}>\n            <td>\n            <ReactMoment date={published_at} format=\"DD\" />\n            </td>\n            <td>\n            <LinkContainer className=\"cursor-pointer\" key={v4()} to={`/blog/posts/${slug}`}>\n                <span>{title}</span>\n            </LinkContainer>\n            </td>\n        </tr>\n      );\n  }\n\n  populatePostsList() {\n    let currentMonth = null;\n    let currentYear = null;\n    const elementsList = [];\n\n    this.state.posts.forEach((post) => {\n      const datePublished = new Moment(post.published_at);\n      const postMonth = datePublished.month();\n      const postYear = datePublished.year();\n\n      if (post.title.toLowerCase().indexOf(this.state.searchText.toLowerCase()) === -1) return;\n\n      if (postMonth !== currentMonth || postYear !== currentYear) {\n        currentMonth = postMonth;\n        currentYear = postYear;\n        elementsList.push(\n          this.monthYearElement(currentYear,  datePublished.format(\"MMMM\"))\n        );\n      }\n      elementsList.push(this.postElement(post));\n    });\n\n    this.setState({\n      postsElements: [...elementsList],\n    });\n  }\n\n  async componentDidMount() {\n    await this.getBlogPosts();\n    this.populatePostsList();\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Row>\n          <Col className=\"text-center\">\n            <div>Error: {this.state.error.message}</div>\n          </Col>\n        </Row>\n      );\n    } else if (!this.state.isLoaded) {\n      return (\n        <Row>\n          <Col className=\"text-center\">\n            <Loading />\n          </Col>\n        </Row>\n      );\n    } else {\n      return (\n        <Row>\n          <Col xs={12}>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control \n              type=\"text\" \n              placeholder=\"Filter by Title\" \n              value={this.state.searchText}\n              onChange={(e)=>{\n                this.setState({\n                  searchText: e.target.value\n                }, ()=>{\n                  this.populatePostsList();\n                });\n              }}\n              />\n            </Form.Group>\n            </Form>\n          </Col>\n          <Col xs={12}>\n          <Table striped bordered hover size=\"sm\">\n            <tbody>\n            {this.state.postsElements}\n            </tbody>\n            </Table>\n            </Col>\n        </Row>\n      );\n    }\n  }\n}\n\nexport default BlogPostsArchive;\n","import React, { useEffect, useState } from \"react\";\nimport { ListGroup, Row, Col, Badge } from \"react-bootstrap\";\nimport { getTags } from \"../../api/blog\";\nimport Loading from \"../Loading/index\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst BlogTopics = () => {\n  const [tags, setTags] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  const populateTags = async () => {\n    try {\n      const response = await getTags();\n      setTags(response.tags);\n      console.log(response);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    populateTags();\n  }, []);\n\n  if (error) {\n    return (\n      <Row>\n        <Col>Error: {error}</Col>\n      </Row>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Loading />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <Row>\n      <Col>\n        <ListGroup>\n          {tags.map(({ id, description, name, slug, count }) => {\n            return (\n              <LinkContainer\n                className=\"cursor-pointer\"\n                key={id}\n                to={`/blog/topics/${slug}`}\n              >\n                <ListGroup.Item>\n                  {name}&nbsp;&nbsp;\n                  <Badge variant=\"light\">{count.posts}</Badge>\n                </ListGroup.Item>\n              </LinkContainer>\n            );\n          })}\n        </ListGroup>\n      </Col>\n    </Row>\n  );\n};\n\nexport default BlogTopics;\n","import React from \"react\";\nimport { Row, Col, Nav } from \"react-bootstrap\";\nimport { IndexLinkContainer, LinkContainer } from \"react-router-bootstrap\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nconst BlogNav = () => {\n  let { path } = useRouteMatch();\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col>\n          <Nav variant=\"pills\" defaultActiveKey={path}>\n            <Nav.Item>\n              <IndexLinkContainer to={path}>\n                <Nav.Link>Blog</Nav.Link>\n              </IndexLinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <LinkContainer to={`${path}/archive`}>\n                <Nav.Link>Archive</Nav.Link>\n              </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <LinkContainer to={`${path}/topics`}>\n                <Nav.Link>Topics</Nav.Link>\n              </LinkContainer>\n            </Nav.Item>\n          </Nav>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default BlogNav;\n","import React from \"react\";\nimport BlogPosts from '../BlogPosts/index';\nimport { useParams } from 'react-router-dom';\n\nconst BlogPostsByTopic = () => {\n    const { topic } = useParams();\n    return(<BlogPosts topic={topic} />);\n}\n\nexport default BlogPostsByTopic;","import React from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nimport BlogPosts from \"../BlogPosts/index\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport BlogPostsArchive from \"../BlogPostsArchive/index\";\nimport BlogTopics from '../BlogTopics/index';\nimport BlogNav from '../BlogNav/index';\nimport BlogPostsByTopic from '../BlogPostsByTopic/index';\n\nfunction Blog() {\n  let { path } = useRouteMatch();\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={12} sm={12} md={12} lg={2} xl={2} />\n        <Col>\n          <BlogNav/>\n          <Switch>\n          <Route path={`${path}/topics/:topic`}>\n              <BlogPostsByTopic />\n            </Route>\n            <Route path={`${path}/archive`}>\n              <BlogPostsArchive />\n            </Route>\n            <Route path={`${path}/topics`}>\n              <BlogTopics />\n            </Route>\n            <Route exact path={path}>\n              <BlogPosts />\n            </Route>\n          </Switch>\n        </Col>\n        <Col xs={12} sm={12} md={12} lg={2} xl={2} />\n      </Row>\n    </Container>\n  );\n}\n\nexport default Blog;\n","import React from 'react';\n\nconst Portfolio = () => {\n    return (\n        <span>Under Construction.</span>\n    )\n};\n\nexport default Portfolio;","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter, faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nconst Home = () => {\n    return (\n        <Jumbotron>\n        <h1>Hi, I'm Anas Najaa.</h1>\n        <p>\n            I'm a software developer based in Kuwait.<br/>\n            I'm currently interested in building simple to use APIs and SPAs.<br/>\n            <br/>\n            <a style={{textDecoration: \"none\", color:\"#1DA1F2\"}} className=\"h4\" href=\"https://twitter.com/spidernet12\">\n                <FontAwesomeIcon icon={faTwitter} />\n            </a>\n            <span>&nbsp;&nbsp;</span>\n            <a style={{textDecoration: \"none\", color:\"#2867B2\"}} className=\"h4\" href=\"https://www.linkedin.com/in/anasnajaa\">\n                <FontAwesomeIcon icon={faLinkedin} />\n            </a>\n            <span>&nbsp;&nbsp;</span>\n            <a style={{textDecoration: \"none\", color:\"#24292e\"}} className=\"h4\" href=\"https://github.com/anasnajaa\">\n                <FontAwesomeIcon icon={faGithub} />\n            </a>\n            <span>&nbsp;&nbsp;</span>\n            <a style={{textDecoration: \"none\", color:\"#D44638\"}} className=\"h4\" href=\"mailto:anas.najaa@outlook.com\">\n                <FontAwesomeIcon icon={faEnvelope} />\n            </a>\n        </p>\n        \n        </Jumbotron>\n    )\n};\n\nexport default Home;","import React from \"react\";\n\nconst Portfolio = () => {\n  return (\n    <>\n      <span>404 Error</span>\n      <span>Page Not Found</span>\n    </>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { IndexLinkContainer, LinkContainer } from \"react-router-bootstrap\";\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst NavigationBar = () => (\n    <Navbar bg=\"light\" expand=\"lg\">\n        <IndexLinkContainer to=\"/\">\n            <Navbar.Brand>Anas Najaa</Navbar.Brand>\n        </IndexLinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n            <IndexLinkContainer to=\"/\">\n                <Nav.Link>Home</Nav.Link>\n            </IndexLinkContainer>\n            <LinkContainer to=\"/blog\">\n                <Nav.Link>Blog</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/portfolio\">\n                <Nav.Link>Portfolio</Nav.Link>\n            </LinkContainer>\n        </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n);\n\nexport default NavigationBar;\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Row, Col } from 'react-bootstrap';\nimport { getPostBySlug } from '../../api/blog';\nimport Loading from '../Loading/index';\nclass BlogPostBySlug extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      post: null\n    };\n  }\n\n  async getBlogPost(slug) {\n    try {\n      const response = await getPostBySlug(slug);\n      console.log(response);\n      this.setState({\n        error: null,\n        isLoaded: true,\n        post: {...response}\n      }, ()=>{ return response; });\n    } catch (error) {\n      this.setState({\n        error: error,\n        isLoaded: true\n      }, ()=>{ return null; });\n    }\n  }\n\n  async componentDidMount() {\n    const { match: { params } } = this.props;\n    await this.getBlogPost(params.slug);\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Row>\n          <Col className=\"text-center\">\n            <div>Error: {this.state.error.message}</div>\n          </Col>\n        </Row>\n      );\n    } else if (!this.state.isLoaded) {\n      return (\n        <Row>\n          <Col className=\"text-center\">\n            <Loading />\n          </Col>\n        </Row>\n      );\n    } else {\n      return (\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={2} xl={2}></Col>\n          <Col xs={12} sm={12} md={12} lg={8} xl={8}>\n            <div dangerouslySetInnerHTML={{__html: this.state.post.html}} />\n          </Col>\n          <Col xs={12} sm={12} md={12} lg={2} xl={2}></Col>\n        </Row>\n      );\n    }\n  }\n}\n\nexport default withRouter(BlogPostBySlug);","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./App.scss\";\n\nimport Blog from \"./components/Blog/index\";\nimport Portfolio from \"./components/Portfolio/index\";\nimport Home from \"./components/Home/index\";\nimport PageNotFound from './components/PageNotFound/index';\nimport NavigationBar from './components/NavBar';\nimport BlogPostBySlug from \"./components/BlogPostBySlug/index\";\n\nconst App = () => (\n  <Router>\n    <NavigationBar/>\n    <Container className=\"p-3\">\n      <Switch>\n        <Route exact path=\"/\"><Home /></Route>\n        <Route path={`/blog/posts/:slug`}>\n              <BlogPostBySlug />\n        </Route>\n        <Route path=\"/blog\"><Blog /></Route>\n        <Route path=\"/portfolio\"><Portfolio /></Route>\n        <Route path=\"*\">\n            <PageNotFound />\n        </Route>\n      </Switch>\n    </Container>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  //<React.StrictMode> temporary fix for bootstrap warnings\n    <App />\n  //</React.StrictMode>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}