{"version":3,"sources":["api/blog.js","components/Pagination/index.js","components/TagsUtility/index.js","components/BlogPostSimple/index.js","components/Loading/index.js","components/Alert/index.js","components/BlogPosts/index.js","components/BlogPostsArchive/index.js","components/BlogTopics/index.js","components/BlogNav/index.js","components/BlogPostBySlug/index.js","components/BlogPostsByTopic/index.js","components/Blog/index.js","components/Portfolio/index.js","components/Home/index.js","components/PageNotFound/index.js","components/NavBar/index.js","components/Services/index.js","components/PagesMapping/index.js","App.js","index.js"],"names":["API_URL","KEY","ERRMSG","getPosts","limit","page","topic","a","fetch","response","ok","json","Error","getArchivePosts","getPostBySlug","slug","body","posts","getTags","getPageData","internalTag","getPageElement","currentPage","pageToAdd","onClick","isLoading","Item","disabled","key","v4","active","Spinner","as","animation","size","role","aria-hidden","Ellipsis","Pagination","pg","onNextClick","onPreviousClick","onPageClick","pages","Prev","Next","pagObj","l","current","last","left","right","range","i","push","forEach","getPages","TagsStyleResolver","id","backgroundColor","color","TagsBuilder","tags","length","className","style","marginLeft","map","name","to","Badge","BlogPostSimple","post","Card","Img","variant","src","feature_image","Body","Title","title","Subtitle","OverlayTrigger","placement","overlay","Tooltip","date","published_at","format","fromNow","Text","custom_excerpt","Loading","message","type","Alert","dismissible","Heading","getQueryParams","history","params","qs","parse","location","search","ignoreQueryPrefix","p","parseInt","withRouter","useState","topicTitle","setTopicTitle","error","setError","isLoaded","setIsLoaded","setPosts","pagination","setPagination","setCurrentPage","buildUrl","baseUrl","getBlogPosts","meta","filter","x","useEffect","listen","Row","Col","xs","sm","md","lg","xl","selectPageNumber","BlogPostsArchive","postsElements","setPostsElements","searchText","setSearchText","populatePostsList","currentMonth","currentYear","elementsList","year","month","datePublished","Moment","postMonth","postYear","toLowerCase","indexOf","colSpan","postElement","Form","Group","controlId","Control","placeholder","value","onChange","e","target","Table","striped","bordered","hover","BlogTopics","setTags","populateTags","ListGroup","description","count","BlogNav","isTabletOrMobile","useMediaQuery","query","Nav","Link","match","setPost","loadCommentsEnabled","setLoadingCommentsEnabled","getBlogPost","console","log","dangerouslySetInnerHTML","__html","html","Button","window","disqus_config","this","url","href","identifier","script","document","createElement","setAttribute","Date","now","toString","appendChild","loadComments","BlogPostsByTopic","useParams","Blog","path","exact","Portfolio","Home","Jumbotron","textDecoration","icon","faTwitter","faLinkedin","faGithub","faEnvelope","NavigationBar","Navbar","bg","expand","Container","Brand","Toggle","aria-controls","Collapse","Services","headerCardContent","setHeaderCardContent","servicesCards","setServicesCards","ServiceElement","card","Header","Accordion","eventKey","loadPageData","pageContent","headerCard","find","services","defaultActiveKey","App","PageNotFound","ReactDOM","render","getElementById"],"mappings":"oSACMA,EAAY,yDACZC,EAAG,cAFS,8BAGZC,EAAM,qCAECC,EAAQ,uCAAG,WAAOC,EAAOC,EAAMC,GAApB,eAAAC,EAAA,sEACGC,MAAM,UAAGR,EAAH,mBAAqBC,EAArB,4IAEiCG,EAFjC,iBAE+CC,EAF/C,eAG1BC,EAAK,qBAAiBA,GAAQ,KAJb,YACdG,EADc,QAKRC,GALQ,gCAMHD,EAASE,OANN,qDAQVC,MAAM,GAAD,OAAIV,EAAJ,cARK,4CAAH,0DAYRW,EAAe,uCAAG,4BAAAN,EAAA,sEACJC,MAAM,UAAGR,EAAH,mBAAqBC,EAArB,4DADF,YACrBQ,EADqB,QAGfC,GAHe,gCAIVD,EAASE,OAJC,qDAMjBC,MAAM,GAAD,OAAIV,EAAJ,qBANY,4CAAH,qDAUfY,EAAa,uCAAG,WAAOC,GAAP,iBAAAR,EAAA,sEACFC,MAAM,UAAGR,EAAH,uBAAyBe,EAAzB,YAAiCd,EAAjC,kBAC7B,2FAFyB,YACnBQ,EADmB,QAGbC,GAHa,iCAIFD,EAASE,OAJP,cAIfK,EAJe,yBAKdA,EAAKC,MAAM,IALG,cAOfL,MAAM,GAAD,OAAIV,EAAJ,mBAPU,4CAAH,sDAoBbgB,EAAO,uCAAG,4BAAAX,EAAA,sEACIC,MAAM,UAAGR,EAAH,kBAAoBC,EAApB,gEADV,YACbQ,EADa,QAGPC,GAHO,gCAIFD,EAASE,OAJP,qDAMTC,MAAM,GAAD,OAAIV,EAAJ,aANI,4CAAH,qDAUPiB,EAAW,uCAAG,WAAOC,GAAP,eAAAb,EAAA,sEACAC,MAAM,UAAGR,EAAH,mBAAqBC,EAArB,oFAEmBmB,EAFnB,gCADN,YACjBX,EADiB,QAIXC,GAJW,gCAKND,EAASE,OALH,qDAObC,MAAM,GAAD,OAAIV,EAAJ,iBAPQ,4CAAH,sD,2BCrDlBmB,EAAiB,SAACC,EAAaC,EAAWC,EAASC,GACrD,OAAGH,IAAgBC,EAEX,kBAAC,IAAGG,KAAJ,CAASC,SAAUF,EAAWG,IAAKC,cAAMC,QAAM,GAC7CL,EACE,kBAACM,EAAA,EAAD,CACAC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SANFb,GAWG,QAAdA,EAEH,kBAAC,IAAGc,SAAJ,CAAaV,UAAQ,EAACC,IAAKC,gBAI3B,kBAAC,IAAGH,KAAJ,CAASC,SAAUF,EAAWD,QAAS,WAAKA,EAAQD,IAAaK,IAAKC,eACjEN,IAiGFe,EA3CI,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,GAAId,EAA2D,EAA3DA,UAAWe,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,YAC/D,OACI,kBAAC,IAAD,CAAIR,KAAK,MACJK,GAAMA,EAAGI,OAASJ,EAAGI,MAAQ,EAC9B,oCACkB,IAAbJ,EAAGI,MACJ,oCACA,kBAAC,IAAGC,KAAJ,CAASjB,UAAQ,IACb,kBAAC,IAAGD,KAAJ,CAASC,UAAQ,GAAjB,KACJ,kBAAC,IAAGkB,KAAJ,CAASlB,UAAQ,KAGjB,oCACI,kBAAC,IAAGiB,KAAJ,CAASjB,SAAUF,GAAyB,IAAZc,EAAGlC,KAAYmB,QAAS,WAAKiB,OA7DhE,SAACK,EAAQtB,EAASC,GAU/B,IATA,IAOIsB,EAPEC,EAAUF,EAAOzC,KACnB4C,EAAOH,EAAOH,MAEZO,EAAOF,EADD,EAENG,EAAQH,EAFF,EAEoB,EAC1BI,EAAQ,GACRT,EAAQ,GAGLU,EAAI,EAAGA,GAAKJ,EAAMI,GAAK,EAC9B,GAAU,IAANA,GAAWA,IAAMJ,GAASI,GAAKH,GAAQG,GAAKF,EAC9CC,EAAME,KAAKD,QACN,GAAIA,EAAIH,EACbG,EAAIH,EAAO,OACN,GAAIG,EAAIF,EAAO,CACpBC,EAAME,KAAKL,GACX,MA4BJ,OAxBAG,EAAMG,SAAQ,SAAAF,GACRN,IACEM,EAAIN,IAAM,EACVJ,EAAMW,KAAKjC,EACX2B,EACAD,EAAI,EACJvB,EACAC,IACO4B,EAAIN,IAAM,GACjBJ,EAAMW,KAAKjC,EACP2B,EACA,MACAxB,EACAC,KAGVkB,EAAMW,KAAKjC,EACT2B,EACAK,EACA7B,EACAC,IACFsB,EAAIM,KAGCV,EAiBca,CAASjB,EAAIG,EAAajB,GAC/B,kBAAC,IAAGoB,KAAJ,CAASlB,SAAUF,GAAac,EAAGI,QAAUJ,EAAGlC,KAAMmB,QAAS,WAAKgB,SAI5E,oCACKf,EACD,oCACI,kBAAC,IAAGC,KAAJ,CAASC,UAAQ,GACb,kBAACI,EAAA,EAAD,CACIC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,WAKxB,oCACI,kBAAC,IAAGQ,KAAJ,CAASjB,UAAQ,IACb,kBAAC,IAAGD,KAAJ,CAASC,UAAQ,GAAjB,QACJ,kBAAC,IAAGkB,KAAJ,CAASlB,UAAQ,Q,4DChHxB8B,EAAoB,SAACC,GAChC,MAAW,6BAAPA,EACK,CAAEC,gBAAiB,MAAOC,MAAO,SAE/B,6BAAPF,EACK,CAAEC,gBAAiB,OAAQC,MAAO,SAEhC,6BAAPF,EACK,CAAEC,gBAAiB,QAASC,MAAO,SAEjC,6BAAPF,EACK,CAAEC,gBAAiB,SAAUC,MAAO,cAD7C,GAKWC,EAAc,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAC3B,OACE,oCACGA,EAAKC,OAAS,EACX,2BAAOC,UAAU,kBAAkBC,MAAO,CAAEC,WAAY,YACrDJ,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,KAAMrD,EAAT,EAASA,KAAM2C,EAAf,EAAeA,GAAf,OACR,kBAAC,gBAAD,CAAeO,MAAOR,EAAkBC,GAAK9B,IAAK8B,EAAIW,GAAE,uBAAkBtD,IACxE,kBAACuD,EAAA,EAAD,CAAON,UAAU,2BACdI,QAMX,uCCKOG,EAhCQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACxB,OACE,kBAACC,EAAA,EAAD,CAAMT,UAAU,QACd,kBAAC,gBAAD,CAAeA,UAAU,iBAAiBK,GAAE,sBAAiBG,EAAKzD,OAChE,kBAAC0D,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAKJ,EAAKK,iBAEpC,kBAAC,gBAAD,CAAeb,UAAU,iBAAiBK,GAAE,sBAAiBG,EAAKzD,OAChE,kBAAC0D,EAAA,EAAKK,KAAN,CAAWd,UAAU,QACnB,kBAACS,EAAA,EAAKM,MAAN,KAAaP,EAAKQ,OAClB,kBAACP,EAAA,EAAKQ,SAAN,CAAejB,UAAU,mBACvB,kBAACkB,EAAA,EAAD,CACEC,UAAU,MACVC,QACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,KAAMd,EAAKe,aACXC,OAAO,yBAKb,kBAAC,IAAD,CAAQF,KAAMd,EAAKe,aAAcE,SAAO,MAG5C,kBAAChB,EAAA,EAAKiB,KAAN,KAAYlB,EAAKmB,kBAGrB,kBAAC,EAAD,CAAa7B,KAAMU,EAAKV,S,iBCdf8B,EAhBC,WACZ,OACI,8BACJ,kBAAC7D,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,OACZ4B,UAAU,SAPR,4B,0BCFO,cAA6B,IAA3BgB,EAA0B,EAA1BA,MAAOa,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,KAC/B,OACE,kBAACC,EAAA,EAAD,CAAOpB,QAASmB,EAAME,aAAW,GAC/B,kBAACD,EAAA,EAAME,QAAP,KAAgBjB,GAChB,2BAAIa,KCGJK,EAAiB,SAACC,GACtB,IAAIC,EAASC,IAAGC,MAAMH,EAAQI,SAASC,OAAQ,CAAEC,mBAAmB,IACpE,MAAO,CACLC,EAAGN,EAAOM,EAAIC,SAASP,EAAOM,GAAK,OA+HxBE,eA3HG,SAAC,GAAwB,IAAtBtG,EAAqB,EAArBA,MAAO6F,EAAc,EAAdA,QAAc,EACJU,mBAAS,MADL,mBACjCC,EADiC,KACrBC,EADqB,OAEdF,mBAAS,MAFK,mBAEjCG,EAFiC,KAE1BC,EAF0B,OAGRJ,oBAAS,GAHD,mBAGjCK,EAHiC,KAGvBC,EAHuB,OAIdN,mBAAS,IAJK,mBAIjC5F,EAJiC,KAI1BmG,EAJ0B,OAKJP,mBAAS,MALL,mBAKjCQ,EALiC,KAKrBC,EALqB,OAMFT,mBACpCX,EAAeC,GAASO,GAAK,GAPS,mBAMjCpF,EANiC,KAMpBiG,EANoB,KAUlCC,EAAW,SAACnH,GAChB,IAAIoH,EAAU,GAMd,OAJEA,EADEnH,EACK,uBAAmBA,GAEnB,QAEH,GAAN,OAAUmH,EAAV,cAAuBpH,IAGnBqH,EAAY,uCAAG,WAAOrH,EAAMC,GAAb,iBAAAC,EAAA,+EAEMJ,EAAS,EAAGE,GAAQ,EAAGC,GAF7B,OAEXG,EAFW,OAGjBwG,EAAS,MACTG,EAAS3G,EAASQ,OAClBqG,EAAc7G,EAASkH,KAAKN,YAExB/G,IACI0E,EAAQvE,EAASQ,MAAM,GAAG6C,KAAK8D,QAAO,SAACC,GAAD,OAAOA,EAAE9G,OAAST,KAAO,GAClE8D,KACH2C,EAAc/B,IAVC,kDAajBiC,EAAS,EAAD,IAbS,yBAejBE,GAAY,GAfK,6EAAH,wDAqClB,OAbAW,qBAAU,kBACN3B,EAAQ4B,QAAO,WACb,IAPqB1H,EAOf+F,EAASF,EAAeC,GAPT9F,EASH+F,EAAOM,EAR7Ba,EAAelH,GACf8G,GAAY,QASP,IAEPW,qBAAU,WACRJ,EAAapG,EAAahB,KAEzB,CAACgB,EAAahB,IAEb0G,EAEA,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKjE,UAAU,eACb,kBAAC,EAAD,CAAOgB,MAAM,YAAYa,QAASmB,EAAMnB,QAASC,KAAK,aAMzDoB,EAkBH,kBAACc,EAAA,EAAD,KACG1H,GACC,kBAAC2H,EAAA,EAAD,CAAKC,GAAI,IACP,4BACE,2BAAIpB,KAIT7F,EAAMkD,KAAI,SAACK,GAAD,OACT,kBAACyD,EAAA,EAAD,CAAKrG,IAAK4C,EAAKd,GAAIwE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrD,kBAAC,EAAD,CAAgB9D,KAAMA,QAI1B,kBAACyD,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACvC,kBAACL,EAAA,EAAD,CAAKjE,UAAU,cAAckE,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7D,kBAAC,EAAD,CACE/F,GAAI8E,EACJ7E,YAAa,WACX2D,EAAQ7C,KAAKkE,EAASlG,EAAc,KAGtCmB,gBAAiB,WACf0D,EAAQ7C,KAAKkE,EAASlG,EAAc,KAGtCoB,YAAa,SAAC6F,GACZpC,EAAQ7C,KAAKkE,EAASe,KAGxB9G,WAAYyF,KAGhB,kBAACe,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,KAjDvC,kBAACN,EAAA,EAAD,KACG1H,GACC,kBAAC2H,EAAA,EAAD,CAAKC,GAAI,IACP,4BACE,2BAAIpB,KAIV,kBAACmB,EAAA,EAAD,CAAKjE,UAAU,eACb,kBAAC,EAAD,W,mCCuCKwE,EA5HU,WAAM,IAAD,EACF3B,mBAAS,MADP,mBACrBG,EADqB,KACdC,EADc,OAEIJ,oBAAS,GAFb,mBAErBK,EAFqB,KAEXC,EAFW,OAGFN,mBAAS,IAHP,mBAGrB5F,EAHqB,KAGdmG,EAHc,OAIcP,mBAAS,IAJvB,mBAIrB4B,EAJqB,KAINC,EAJM,OAKQ7B,mBAAS,IALjB,mBAKrB8B,EALqB,KAKTC,EALS,KAOtBlB,EAAY,uCAAG,4BAAAnH,EAAA,+EAEMM,IAFN,cAEXJ,EAFW,OAGjBwG,EAAS,MACTG,EAAS3G,EAASQ,OAJD,kBAKVR,EAASQ,OALC,gCAOjBgG,EAAS,EAAD,IAPS,yBASjBE,GAAY,GATK,4EAAH,qDAoCZ0B,EAAoB,WACxB,IAAIC,EAAe,KACfC,EAAc,KACZC,EAAe,GAErB/H,EAAMsC,SAAQ,SAACiB,GACb,IA7BsByE,EAAMC,EA6BtBC,EAAgB,IAAIC,IAAO5E,EAAKe,cAChC8D,EAAYF,EAAcD,QAC1BI,EAAWH,EAAcF,QAEqC,IAAhEzE,EAAKQ,MAAMuE,cAAcC,QAAQb,EAAWY,iBAE5CF,IAAcP,GAAgBQ,IAAaP,IAC7CD,EAAeO,EACfN,EAAcO,EACdN,EAAa1F,MAtCO2F,EAuCDF,EAvCOG,EAuCOC,EAAc3D,OAAO,QArCtD,wBAAIxB,UAAU,0BAA0BpC,IAAKC,eAAM,wBAAI4H,QAAQ,KAC3D,gCAASR,EAAT,IAAgBC,QAuCtBF,EAAa1F,KAlCG,SAAC,GAAqC,IAApCI,EAAmC,EAAnCA,GAAI6B,EAA+B,EAA/BA,aAAcxE,EAAiB,EAAjBA,KAAMiE,EAAW,EAAXA,MAC1C,OACE,wBAAIpD,IAAK8B,GACL,4BACA,kBAAC,IAAD,CAAa4B,KAAMC,EAAcC,OAAO,QAExC,4BACA,kBAAC,gBAAD,CAAexB,UAAU,iBAAiBpC,IAAKC,cAAMwC,GAAE,sBAAiBtD,IACpE,8BAAOiE,MA0BC0E,CAAYlF,QAEhCkE,EAAiB,GAAD,OAAKM,KAavB,OAVAlB,qBAAU,WACRJ,MAEC,IAEHI,qBAAU,WACRe,MAEC,CAAC5H,EAAO0H,IAEP3B,EAEA,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKjE,UAAU,eACb,kBAAC,EAAD,CAAOgB,MAAM,YAAYa,QAASmB,EAAMnB,QAASC,KAAK,aAMzDoB,EAWH,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACyB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,EAAA,EAAKG,QAAN,CACAhE,KAAK,OACLiE,YAAY,kBACZC,MAAOrB,EACPsB,SAAU,SAACC,GACTtB,EAAcsB,EAAEC,OAAOH,aAM7B,kBAAC/B,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACkC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACrI,KAAK,MACjC,+BACCuG,MA3BH,kBAACT,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKjE,UAAU,eACb,kBAAC,EAAD,S,SChCKwG,EA/DI,WAAO,IAAD,EACC3D,mBAAS,IADV,mBAChB/C,EADgB,KACV2G,EADU,OAES5D,oBAAS,GAFlB,mBAEhBK,EAFgB,KAENC,EAFM,OAGGN,mBAAS,MAHZ,mBAGhBG,EAHgB,KAGTC,EAHS,KAKjByD,EAAY,uCAAG,4BAAAnK,EAAA,+EAEMW,IAFN,OAEXT,EAFW,OAGjBgK,EAAQhK,EAASqD,MAHA,gDAKjBmD,EAAS,EAAD,IALS,yBAOjBE,GAAY,GAPK,4EAAH,qDAelB,OAJAW,qBAAU,WACR4C,MACC,IAEC1D,EAEA,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eAAajB,IAKdE,EAWH,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC0C,EAAA,EAAD,KACG7G,EAAKK,KAAI,YAA6C,IAA1CT,EAAyC,EAAzCA,GAAIkH,EAAqC,EAArCA,YAAaxG,EAAwB,EAAxBA,KAAMrD,EAAkB,EAAlBA,KAAM8J,EAAY,EAAZA,MACxC,OACE,kBAAC,gBAAD,CACE7G,UAAU,iBACVpC,IAAK8B,EACLW,GAAE,uBAAkBtD,IAEpB,kBAAC4J,EAAA,EAAUjJ,KAAX,KACG0C,EADH,WAEE,kBAACE,EAAA,EAAD,CAAOK,QAAQ,SAASkG,EAAM5J,OAAc,6BAC1C,+BAAQ2J,WAtBtB,kBAAC5C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKjE,UAAU,eACb,kBAAC,EAAD,S,kBCLK8G,GA5BC,WAEd,IAAMC,EAAmBC,yBAAc,CAAEC,MAAO,wBAChD,OACE,kBAACjD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIlE,UAAU,QACrB,kBAACkH,EAAA,EAAD,CAAKlH,UAAW+G,EAAiB,GAAG,eAClC,kBAACG,EAAA,EAAIxJ,KAAL,KACE,kBAAC,qBAAD,CAAoB2C,GAAE,SACpB,kBAAC6G,EAAA,EAAIC,KAAL,eAGJ,kBAACD,EAAA,EAAIxJ,KAAL,KACE,kBAAC,qBAAD,CAAoB2C,GAAE,gBACpB,kBAAC6G,EAAA,EAAIC,KAAL,iBAGJ,kBAACD,EAAA,EAAIxJ,KAAL,KACE,kBAAC,qBAAD,CAAoB2C,GAAE,iBACpB,kBAAC6G,EAAA,EAAIC,KAAL,sB,mBCyFDvE,gBAxGQ,SAAC,GAAkC,IAAhCwE,EAA+B,EAA/BA,MAA+B,KAAxB7E,SAAwB,EAAdJ,QACfU,mBAAS,OADoB,mBAChDG,EADgD,KACzCC,EADyC,OAEvBJ,oBAAS,GAFc,mBAEhDK,EAFgD,KAEtCC,EAFsC,OAG/BN,mBAAS,MAHsB,mBAGhDrC,EAHgD,KAG1C6G,EAH0C,OAIExE,oBAAS,GAJX,mBAIhDyE,EAJgD,KAI3BC,EAJ2B,KAkBjDC,EAAW,uCAAG,WAAOzK,GAAP,eAAAR,EAAA,+EAEOO,EAAcC,GAFrB,OAEVN,EAFU,OAGhBgL,QAAQC,IAAIjL,GACZwG,EAAS,MACToE,EAAQ,gBAAK5K,IALG,gDAOhBwG,EAAS,EAAD,IAPQ,yBAShBE,GAAY,GATI,4EAAH,sDAiBjB,OAJAW,qBAAU,WACR0D,EAAYJ,EAAMhF,OAAOrF,QACxB,CAACqK,EAAMhF,OAAOrF,OAEbiG,EAEA,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKjE,UAAU,eACb,kBAAC,EAAD,CAAOgB,MAAM,YAAYa,QAASmB,EAAMnB,QAASC,KAAK,aAMzDoB,EAWH,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKjE,UAAU,QACb,4BACE,2BAAIQ,EAAKQ,QAEX,kBAACE,EAAA,EAAD,CACEC,UAAU,MACVC,QACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAQC,KAAMd,EAAKe,aAAcC,OAAO,yBAI5C,4CACY,kBAAC,IAAD,CAAQF,KAAMd,EAAKe,aAAcE,SAAO,MAGtD,6BACA,+BACE,qCAEF,kBAAC,EAAD,CAAa3B,KAAMU,EAAKV,QAE1B,kBAACmE,EAAA,EAAD,CAAKC,GAAI,IACP,yBAAKyD,wBAAyB,CAAEC,OAAQpH,EAAKqH,SAE/C,kBAAC5D,EAAA,EAAD,CAAKC,GAAI,GAAIlE,UAAU,oBACpBsH,GACC,kBAACQ,GAAA,EAAD,CACEnH,QAAQ,YACRnD,QAAS,YAjFE,WACnB+J,GAA0B,GAC1BQ,OAAOC,cAAgB,WACrBC,KAAK5L,KAAK6L,IAAMH,OAAOxF,SAAS4F,KAChCF,KAAK5L,KAAK+L,WAAa5H,EAAKd,IAG9B,IAAM2I,EAASC,SAASC,cAAc,UACtCF,EAAOzH,IAAM,0CACbyH,EAAOG,aAAa,iBAAkBC,KAAKC,MAAMC,YACjDL,SAAStL,KAAK4L,YAAYP,GAwEhBQ,KAHJ,kBASAvB,GACA,oCACE,6BACA,yBAAK5H,GAAG,qBAjDd,kBAACsE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKjE,UAAU,eACb,kBAAC,EAAD,WCjDK8I,GALU,WAAO,IACpBxM,EAAUyM,cAAVzM,MACR,OAAO,kBAAC,EAAD,CAAWA,MAAOA,KCkCd0M,OA7Bf,WACE,OACE,kBAAChF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACtC,kBAAC,GAAD,OAEF,kBAACL,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2E,KAAI,uBACT,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,iBACT,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,gBACT,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,qBACT,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAI,SACf,kBAAC,EAAD,WCxBGE,GANG,WACd,OACI,sD,qCC+BOC,GA7BF,WACT,OACI,kBAACC,GAAA,EAAD,KACA,mDACA,uEAC6C,6BAD7C,oEAEqE,6BACjE,6BACA,uBAAGpJ,MAAO,CAACqJ,eAAgB,OAAQ1J,MAAM,WAAYI,UAAU,KAAKmI,KAAK,mCACrE,kBAAC,KAAD,CAAiBoB,KAAMC,QAE3B,0CACA,uBAAGvJ,MAAO,CAACqJ,eAAgB,OAAQ1J,MAAM,WAAYI,UAAU,KAAKmI,KAAK,yCACrE,kBAAC,KAAD,CAAiBoB,KAAME,QAE3B,0CACA,uBAAGxJ,MAAO,CAACqJ,eAAgB,OAAQ1J,MAAM,WAAYI,UAAU,KAAKmI,KAAK,gCACrE,kBAAC,KAAD,CAAiBoB,KAAMG,QAE3B,0CACA,uBAAGzJ,MAAO,CAACqJ,eAAgB,OAAQ1J,MAAM,WAAYI,UAAU,KAAKmI,KAAK,iCACrE,kBAAC,KAAD,CAAiBoB,KAAMI,WChBxBR,GATG,WAChB,OACE,oCACE,2CACA,kD,UC2BSS,GA3BO,kBACpB,kBAACC,GAAA,EAAD,CAAQ7J,UAAU,YAAY8J,GAAG,QAAQC,OAAO,MAC9C,kBAACC,EAAA,EAAD,KACE,kBAAC,qBAAD,CAAoB3J,GAAG,KACrB,kBAACwJ,GAAA,EAAOI,MAAR,oBAEF,kBAACJ,GAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,GAAA,EAAOO,SAAR,CAAiB1K,GAAG,oBAClB,kBAACwH,EAAA,EAAD,CAAKlH,UAAU,WACb,kBAAC,qBAAD,CAAoBK,GAAG,KACrB,kBAAC6G,EAAA,EAAIC,KAAL,cAEF,kBAAC,gBAAD,CAAe9G,GAAG,SAChB,kBAAC6G,EAAA,EAAIC,KAAL,cAEF,kBAAC,gBAAD,CAAe9G,GAAG,aAChB,kBAAC6G,EAAA,EAAIC,KAAL,kBAEF,kBAAC,gBAAD,CAAe9G,GAAG,cAChB,kBAAC6G,EAAA,EAAIC,KAAL,wB,UCsEGkD,GAzFE,WAAO,IAAD,EAEKxH,mBAAS,MAFd,mBAEdG,EAFc,KAEPC,EAFO,OAG6BJ,mBAAS,IAHtC,mBAGdyH,EAHc,KAGKC,EAHL,OAIW1H,oBAAS,GAJpB,mBAIdK,EAJc,KAIJC,EAJI,OAKqBN,mBAAS,IAL9B,mBAKd2H,EALc,KAKCC,EALD,KAOfC,EAAiB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACvB,OACI,kBAAClK,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKmK,OAAN,KACE,kBAACC,GAAA,EAAUX,OAAX,CAAkBlM,GAAI8J,KAAQnH,QAAQ,UAAUmK,SAAUH,EAAKjL,IAC5DiL,EAAK3J,QAGV,kBAAC6J,GAAA,EAAUT,SAAX,CAAoBU,SAAUH,EAAKjL,IACjC,kBAACe,EAAA,EAAKK,KAAN,KACA,yBAAK6G,wBAAyB,CAAEC,OAAQ+C,EAAK9C,YAOjDkD,EAAY,uCAAG,8BAAAxO,EAAA,+EAEMY,EAAY,iBAFlB,OAEXV,EAFW,OC9BUkC,EDiCUlC,EAASkC,MAAxCqM,ECrBD,CACHC,WAPetM,EAAMuM,MAAK,SAACrH,GAAD,MALA,6BAKOA,EAAEnE,MAQnCyL,SAPaxM,EAAMiF,QAAO,SAACC,GAC3B,MAN0B,6BAMlBA,EAAEnE,IALgB,6BAM1BmE,EAAEnE,IALwB,6BAM1BmE,EAAEnE,ODwBJ6K,EAAqBS,EAAYC,YACjCxD,QAAQC,IAAIsD,EAAYG,UACxBV,EAAiBO,EAAYG,UANZ,kDAQjBlI,EAAS,EAAD,IARS,yBAUjBE,GAAY,GAVK,+CC9BS,IAACxE,ID8BV,2BAAH,qDAkBlB,OAJAmF,qBAAU,WACRiH,MACC,IAEC/H,EAEA,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAOjD,MAAO,YAAaa,QAASmB,EAAMnB,QAASC,KAAK,aAM3DoB,EAWH,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACmF,GAAA,EAAD,KACE,4BAAKiB,EAAkBtJ,OACvB,yBAAK2G,wBAAyB,CAAEC,OAAQ0C,EAAkBzC,UAG9D,kBAAC5D,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACF,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKE,GAAG,IAAID,GAAG,KACrC,kDACA,kBAACwG,GAAA,EAAD,CAAWO,iBAAkBZ,EAAc,GAAG9K,IAC3C8K,EAAcrK,KAAI,SAACwK,GAClB,OAAO,kBAACD,EAAD,CAAgB9M,IAAK+M,EAAKjL,GAAIiL,KAAMA,SAI/C,kBAAC1G,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKE,GAAG,IAAID,GAAG,KACrC,mDA3BN,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKjE,UAAU,eACb,kBAAC,EAAD,SE7BKqL,GAjBH,kBACV,kBAAC,aAAD,KACE,kBAAC,GAAD,MACA,kBAACrB,EAAA,EAAD,CAAWhK,UAAU,YACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkJ,OAAK,EAACD,KAAK,KAAI,kBAAC,GAAD,OACtB,kBAAC,IAAD,CAAOA,KAAK,SAAQ,kBAAC,GAAD,OACpB,kBAAC,IAAD,CAAOA,KAAK,cAAa,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAK,aAAY,kBAAC,GAAD,OACxB,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAACqC,GAAD,WCtBZC,IAASC,OAEL,kBAAC,GAAD,MAGFlD,SAASmD,eAAe,W","file":"static/js/main.00b39867.chunk.js","sourcesContent":["const API_KEY   = \"9c8569eb29d07e9f4b3819310d\"; //for public content only\nconst API_URL   = \"https://hecked-blog.herokuapp.com/ghost/api/v3/content\";\nconst KEY       = `key=${API_KEY}`\nconst ERRMSG    = `Data retrival failed for endpoint:`;\n\nexport const getPosts = async (limit, page, topic) => {\n    const response = await fetch(`${API_URL}/posts/?${KEY}&` +\n    `fields=id,title,slug,custom_excerpt,reading_time,feature_image,`+\n    `created_at,updated_at,published_at,meta&include=tags&limit=${limit}&page=${page}&`+\n    `${topic ? `filter=tag:${topic}`:\"\"}`);\n    if(response.ok){\n        return await response.json();\n    } else {\n        throw Error(`${ERRMSG} getPosts`);\n    }\n}\n\nexport const getArchivePosts = async () => {\n    const response = await fetch(`${API_URL}/posts/?${KEY}&` +\n    `fields=id,title,slug,published_at,tags.id&limit=all`);\n    if(response.ok){\n        return await response.json();\n    } else {\n        throw Error(`${ERRMSG} getArchivePosts`);\n    }\n}\n\nexport const getPostBySlug = async (slug) => {\n    const response = await fetch(`${API_URL}/posts/slug/${slug}?${KEY}&include=tags&` +\n    \"fields=id,title,slug,html,reading_time,feature_image,created_at,updated_at,published_at\");\n    if(response.ok){\n        const body = await response.json();\n        return body.posts[0];\n    } else {\n        throw Error(`${ERRMSG} getPostBySlug`);\n    }\n}\n\nexport const getSettings = async () => {\n    const response = await fetch(`${API_URL}/settings/?${KEY}`);\n    if(response.ok){\n        return await response.json();\n    } else {\n        throw Error(`${ERRMSG} getSettings`);\n    }\n}\n\nexport const getTags = async () => {\n    const response = await fetch(`${API_URL}/tags/?${KEY}&` +\n    `&include=count.posts&limit=all&filter=visibility:public`);\n    if(response.ok){\n        return await response.json();\n    } else {\n        throw Error(`${ERRMSG} getTags`);\n    }\n}\n\nexport const getPageData = async (internalTag) => {\n    const response = await fetch(`${API_URL}/pages/?${KEY}&` +\n    `fields=id,title,html,`+\n    `updated_at,published_at&limit=all&filter=tag:${internalTag}&filter=visibility:internal`);\n    if(response.ok){\n        return await response.json();\n    } else {\n        throw Error(`${ERRMSG} getPageData`);\n    }\n}","import React from 'react';\nimport { Pagination as Pg, Spinner } from 'react-bootstrap';\nimport { v4 } from 'uuid';\n\nconst getPageElement = (currentPage, pageToAdd, onClick, isLoading) => {\n    if(currentPage === pageToAdd) {\n        return (\n            <Pg.Item disabled={isLoading} key={v4()} active>\n            {!isLoading ? pageToAdd:\n                <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n            }\n            </Pg.Item>\n        );\n    } else if (pageToAdd === \"...\") {\n        return (\n            <Pg.Ellipsis disabled key={v4()} />\n        );\n    } else {\n        return (\n            <Pg.Item disabled={isLoading} onClick={()=>{onClick(pageToAdd)}} key={v4()}>\n                {pageToAdd}\n            </Pg.Item>\n        );\n    }\n}\n\nconst getPages = (pagObj, onClick, isLoading)=>{\n    const current = pagObj.page;\n    let last = pagObj.pages;\n    let width = 1;\n    const left = current - width;\n    const right = current + width + 1;\n    const range = [];\n    const pages = [];\n    let l;\n  \n    for (let i = 1; i <= last; i += 1) {\n      if (i === 1 || i === last || (i >= left && i <= right)) {\n        range.push(i);\n      } else if (i < left) {\n        i = left - 1;\n      } else if (i > right) {\n        range.push(last);\n        break;\n      }\n    }\n  \n    range.forEach(i => {\n      if (l) {\n        if (i - l === 2) {\n            pages.push(getPageElement(\n            current, \n            l + 1,\n            onClick,\n            isLoading));\n        } else if (i - l !== 1) {\n            pages.push(getPageElement(\n                current, \n                '...',\n                onClick,\n                isLoading));\n        }\n      }\n      pages.push(getPageElement(\n        current, \n        i,\n        onClick,\n        isLoading));\n      l = i;\n    });\n  \n    return pages;\n}\n\nconst Pagination = ({ pg, isLoading, onNextClick, onPreviousClick, onPageClick }) => {\n    return (\n        <Pg size=\"sm\">\n            {pg && pg.pages && pg.pages > 0 ?\n            <>\n                {pg.pages === 1 ?\n                <>\n                <Pg.Prev disabled />\n                    <Pg.Item disabled>1</Pg.Item>\n                <Pg.Next disabled />\n                </>\n                :\n                <>\n                    <Pg.Prev disabled={isLoading || pg.page === 1} onClick={()=>{onPreviousClick()}} />\n                        {getPages(pg, onPageClick, isLoading)}\n                    <Pg.Next disabled={isLoading || pg.pages === pg.page} onClick={()=>{onNextClick()}}/>\n                </>}\n            </>\n            :\n            <>\n                {isLoading ? \n                <>\n                    <Pg.Item disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Pg.Item>\n                </>\n                :\n                <>\n                    <Pg.Prev disabled />\n                        <Pg.Item disabled>None</Pg.Item>\n                    <Pg.Next disabled />\n                </>}\n            </>}\n        </Pg>\n    );\n}\n\nexport default Pagination;","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport const TagsStyleResolver = (id) => {\n  if (id === \"5f86bc611488fc001eea51ae\") {\n    return { backgroundColor: \"red\", color: \"white\" };\n  }\n  if (id === \"5f8a7e4a11e139001eb1d5d2\") {\n    return { backgroundColor: \"blue\", color: \"white\" };\n  }\n  if (id === \"5f7f519ecbab9f001ede0c9b\") {\n    return { backgroundColor: \"green\", color: \"white\" };\n  }\n  if (id === \"5f8a7f6d11e139001eb1d5d6\") {\n    return { backgroundColor: \"purple\", color: \"white\" };\n  }\n};\n\nexport const TagsBuilder = ({tags}) => {\n  return (\n    <>\n      {tags.length > 0 ? (\n          <small className=\"text-muted pb-2\" style={{ marginLeft: \"1.25rem\" }}>\n            {tags.map(({ name, slug, id }) => (\n              <LinkContainer style={TagsStyleResolver(id)} key={id} to={`/blog/topics/${slug}`}>\n                <Badge className=\"mr-2 p-1 cursor-pointer\">\n                  {name}\n                </Badge>\n              </LinkContainer>\n            ))}\n          </small>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Card, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { TagsBuilder } from \"../TagsUtility/index\";\n\nconst BlogPostSimple = ({ post }) => {\n  return (\n    <Card className=\"mb-2\">\n      <LinkContainer className=\"cursor-pointer\" to={`/blog/posts/${post.slug}`}>\n        <Card.Img variant=\"top\" src={post.feature_image} />\n      </LinkContainer>\n      <LinkContainer className=\"cursor-pointer\" to={`/blog/posts/${post.slug}`}>\n        <Card.Body className=\"pb-0\">\n          <Card.Title>{post.title}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={\n                <Tooltip>\n                  <Moment\n                    date={post.published_at}\n                    format=\"DD/MM/YYYY hh:mm A\"\n                  />\n                </Tooltip>\n              }\n            >\n              <Moment date={post.published_at} fromNow />\n            </OverlayTrigger>\n          </Card.Subtitle>\n          <Card.Text>{post.custom_excerpt}</Card.Text>\n        </Card.Body>\n      </LinkContainer>\n      <TagsBuilder tags={post.tags} />\n    </Card>\n  );\n};\n\nexport default BlogPostSimple;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loading = () => {\n    return (\n        <span>\n    <Spinner\n      as=\"span\"\n      animation=\"border\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n      className=\"mr-2\"\n    />\n    Loading, please wait...\n        </span>\n    )\n};\n\nexport default Loading;","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nexport default ({title, message, type}) => {\n  return (\n    <Alert variant={type} dismissible>\n      <Alert.Heading>{title}</Alert.Heading>\n      <p>{message}</p>\n    </Alert>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { getPosts } from \"../../api/blog\";\nimport Pagination from \"../Pagination/index\";\nimport BlogPostSimple from \"../BlogPostSimple/index\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Loading from \"../Loading/index\";\nimport { withRouter } from \"react-router-dom\";\nimport qs from \"qs\";\nimport Alert from \"../Alert/index\";\n\nconst getQueryParams = (history) => {\n  let params = qs.parse(history.location.search, { ignoreQueryPrefix: true });\n  return {\n    p: params.p ? parseInt(params.p) : null,\n  };\n};\n\nconst BlogPosts = ({ topic, history }) => {\n  const [topicTitle, setTopicTitle] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [pagination, setPagination] = useState(null);\n  const [currentPage, setCurrentPage] = useState(\n    getQueryParams(history).p || 1\n  );\n\n  const buildUrl = (page) => {\n    let baseUrl = \"\";\n    if (topic) {\n      baseUrl = `/blog/topics/${topic}`;\n    } else {\n      baseUrl = `/blog`;\n    }\n    return `${baseUrl}?p=${page}`;\n  };\n\n  const getBlogPosts = async (page, topic) => {\n    try {\n      const response = await getPosts(5, page || 1, topic);\n      setError(null);\n      setPosts(response.posts);\n      setPagination(response.meta.pagination);\n      // grab topic title from one of the posts\n      if (topic) {\n        const title = response.posts[0].tags.filter((x) => x.slug === topic)[0]\n          .name;\n        setTopicTitle(title);\n      }\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoaded(true);\n    }\n  };\n\n  const updateCurrentPage = (page) => {\n    setCurrentPage(page);\n    setIsLoaded(false);\n  };\n\n  useEffect(() =>\n      history.listen(() => {\n        const params = getQueryParams(history);\n        //const params =  qs.parse(history.location.search, { ignoreQueryPrefix: true });\n        updateCurrentPage(params.p);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }),[] );\n\n  useEffect(() => {\n    getBlogPosts(currentPage, topic);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, topic]);\n\n  if (error) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Alert title=\"API Error\" message={error.message} type=\"danger\" />\n        </Col>\n      </Row>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <Row>\n        {topic && (\n          <Col xs={12}>\n            <h3>\n              <i>{topicTitle}</i>\n            </h3>\n          </Col>\n        )}\n        <Col className=\"text-center\">\n          <Loading />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <Row>\n      {topic && (\n        <Col xs={12}>\n          <h3>\n            <i>{topicTitle}</i>\n          </h3>\n        </Col>\n      )}\n      {posts.map((post) => (\n        <Col key={post.id} xs={12} sm={12} md={12} lg={12} xl={12}>\n          <BlogPostSimple post={post} />\n        </Col>\n      ))}\n\n      <Col xs={12} sm={12} md={4} lg={4} xl={4} />\n      <Col className=\"text-center\" xs={12} sm={12} md={4} lg={4} xl={4}>\n        <Pagination\n          pg={pagination}\n          onNextClick={() => {\n            history.push(buildUrl(currentPage + 1));\n            //updateCurrentPage(currentPage + 1);\n          }}\n          onPreviousClick={() => {\n            history.push(buildUrl(currentPage - 1));\n            //updateCurrentPage(currentPage - 1);\n          }}\n          onPageClick={(selectPageNumber) => {\n            history.push(buildUrl(selectPageNumber));\n            //updateCurrentPage(selectPageNumber);\n          }}\n          isLoading={!isLoaded}\n        />\n      </Col>\n      <Col xs={12} sm={12} md={4} lg={4} xl={4} />\n    </Row>\n  );\n};\n\nexport default withRouter(BlogPosts);\n","import React, { useEffect, useState } from \"react\";\nimport { getArchivePosts } from \"../../api/blog\";\nimport { Row, Col, Table, Form } from \"react-bootstrap\";\nimport Loading from \"../Loading/index\";\nimport { v4 } from \"uuid\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport ReactMoment from 'react-moment';\nimport Moment from 'moment';\nimport Alert from '../Alert/index';\n\nconst BlogPostsArchive = ()=> {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [postsElements, setPostsElements] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n\n  const getBlogPosts = async () => {\n    try {\n      const response = await getArchivePosts();\n      setError(null);\n      setPosts(response.posts);\n      return response.posts;\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoaded(true);\n    }\n  }\n\n  const monthYearElement = (year, month) => {\n    return (\n        <tr className=\"bg-secondary text-white\" key={v4()}><td colSpan=\"3\">\n            <strong>{year}-{month}</strong>\n        </td></tr>\n    );\n  }\n\n  const postElement = ({id, published_at, slug, title}) => {\n      return (\n        <tr key={id}>\n            <td>\n            <ReactMoment date={published_at} format=\"DD\" />\n            </td>\n            <td>\n            <LinkContainer className=\"cursor-pointer\" key={v4()} to={`/blog/posts/${slug}`}>\n                <span>{title}</span>\n            </LinkContainer>\n            </td>\n        </tr>\n      );\n  }\n\n  const populatePostsList = () => {\n    let currentMonth = null;\n    let currentYear = null;\n    const elementsList = [];\n\n    posts.forEach((post) => {\n      const datePublished = new Moment(post.published_at);\n      const postMonth = datePublished.month();\n      const postYear = datePublished.year();\n\n      if (post.title.toLowerCase().indexOf(searchText.toLowerCase()) === -1) return;\n\n      if (postMonth !== currentMonth || postYear !== currentYear) {\n        currentMonth = postMonth;\n        currentYear = postYear;\n        elementsList.push(\n          monthYearElement(currentYear,  datePublished.format(\"MMMM\"))\n        );\n      }\n      elementsList.push(postElement(post));\n    });\n    setPostsElements([...elementsList]);\n  }\n\n  useEffect(()=>{\n    getBlogPosts();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(()=>{\n    populatePostsList();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [posts, searchText]);\n\n  if (error) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Alert title=\"API Error\" message={error.message} type=\"danger\" />\n        </Col>\n      </Row>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Loading />\n        </Col>\n      </Row>\n    );\n  } \n\n  return (\n    <Row>\n      <Col xs={12}>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Control \n          type=\"text\" \n          placeholder=\"Filter by Title\" \n          value={searchText}\n          onChange={(e)=>{\n            setSearchText(e.target.value);\n          }}\n          />\n        </Form.Group>\n        </Form>\n      </Col>\n      <Col xs={12}>\n      <Table striped bordered hover size=\"sm\">\n        <tbody>\n        {postsElements}\n        </tbody>\n        </Table>\n        </Col>\n    </Row>\n  );\n}\n\nexport default BlogPostsArchive;\n","import React, { useEffect, useState } from \"react\";\nimport { ListGroup, Row, Col, Badge } from \"react-bootstrap\";\nimport { getTags } from \"../../api/blog\";\nimport Loading from \"../Loading/index\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst BlogTopics = () => {\n  const [tags, setTags] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  const populateTags = async () => {\n    try {\n      const response = await getTags();\n      setTags(response.tags);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    populateTags();\n  }, []);\n\n  if (error) {\n    return (\n      <Row>\n        <Col>Error: {error}</Col>\n      </Row>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Loading />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <Row>\n      <Col>\n        <ListGroup>\n          {tags.map(({ id, description, name, slug, count }) => {\n            return (\n              <LinkContainer\n                className=\"cursor-pointer\"\n                key={id}\n                to={`/blog/topics/${slug}`}\n              >\n                <ListGroup.Item>\n                  {name}&nbsp;&nbsp;\n                  <Badge variant=\"light\">{count.posts}</Badge><br/>\n                    <small>{description}</small>\n                </ListGroup.Item>\n              </LinkContainer>\n            );\n          })}\n        </ListGroup>\n      </Col>\n    </Row>\n  );\n};\n\nexport default BlogTopics;\n","import React from \"react\";\nimport { Row, Col, Nav } from \"react-bootstrap\";\nimport { IndexLinkContainer } from \"react-router-bootstrap\";\nimport { useMediaQuery } from 'react-responsive';\n\nconst BlogNav = () => {\n  //let { path } = useRouteMatch();\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\n  return (\n    <Row>\n        <Col xs={12} className=\"mb-3\">\n          <Nav className={isTabletOrMobile?\"\":\"flex-column\"} >\n            <Nav.Item>\n              <IndexLinkContainer to={`/blog`}>\n                <Nav.Link>Blog</Nav.Link>\n              </IndexLinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <IndexLinkContainer to={`/blog/topics`}>\n                <Nav.Link>Topics</Nav.Link>\n              </IndexLinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <IndexLinkContainer to={`/blog/archive`}>\n                <Nav.Link>Archive</Nav.Link>\n              </IndexLinkContainer>\n            </Nav.Item>\n          </Nav>\n        </Col>\n    </Row>\n  );\n};\n\nexport default BlogNav;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Row, Col, OverlayTrigger, Tooltip, Button } from \"react-bootstrap\";\nimport { getPostBySlug } from \"../../api/blog\";\nimport Loading from \"../Loading/index\";\nimport Moment from \"react-moment\";\nimport { TagsBuilder } from \"../TagsUtility/index\";\nimport Alert from '../Alert/index';\n\nconst BlogPostBySlug = ({ match, location, history }) => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [post, setPost] = useState(null);\n  const [loadCommentsEnabled, setLoadingCommentsEnabled] = useState(true);\n  const loadComments = () => {\n    setLoadingCommentsEnabled(false);\n    window.disqus_config = function () {\n      this.page.url = window.location.href;\n      this.page.identifier = post.id;\n    };\n\n    const script = document.createElement(\"script\");\n    script.src = \"https://hecked-blog.disqus.com/embed.js\";\n    script.setAttribute(\"data-timestamp\", Date.now().toString());\n    document.body.appendChild(script);\n  };\n\n  const getBlogPost = async (slug) => {\n    try {\n      const response = await getPostBySlug(slug);\n      console.log(response);\n      setError(null);\n      setPost({ ...response });\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    getBlogPost(match.params.slug);\n  }, [match.params.slug]);\n\n  if (error) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Alert title=\"API Error\" message={error.message} type=\"danger\" />\n        </Col>\n      </Row>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Loading />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <Row>\n      <Col className=\"mb-4\">\n        <h1>\n          <b>{post.title}</b>\n        </h1>\n        <OverlayTrigger\n          placement=\"top\"\n          overlay={\n            <Tooltip>\n              <Moment date={post.published_at} format=\"DD/MM/YYYY hh:mm A\" />\n            </Tooltip>\n          }\n        >\n          <small>\n            Published <Moment date={post.published_at} fromNow />\n          </small>\n        </OverlayTrigger>\n        <br />\n        <small>\n          <i>Tags </i>\n        </small>\n        <TagsBuilder tags={post.tags} />\n      </Col>\n      <Col xs={12}>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </Col>\n      <Col xs={12} className=\"mt-3 text-center\">\n        {loadCommentsEnabled && (\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              loadComments();\n            }}\n          >\n            Show Comments\n          </Button>\n        )}\n        {!loadCommentsEnabled && (\n          <>\n            <hr />\n            <div id=\"disqus_thread\"></div>\n          </>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default withRouter(BlogPostBySlug);\n","import React from \"react\";\nimport BlogPosts from '../BlogPosts/index';\nimport { useParams } from 'react-router-dom';\n\nconst BlogPostsByTopic = () => {\n    const { topic } = useParams();\n    return(<BlogPosts topic={topic} />);\n}\n\nexport default BlogPostsByTopic;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport BlogPosts from \"../BlogPosts/index\";\nimport { Row, Col } from \"react-bootstrap\";\nimport BlogPostsArchive from \"../BlogPostsArchive/index\";\nimport BlogTopics from \"../BlogTopics/index\";\nimport BlogNav from \"../BlogNav/index\";\nimport BlogPostBySlug from \"../BlogPostBySlug/index\";\nimport BlogPostsByTopic from '../BlogPostsByTopic/index';\n\nfunction Blog() {\n  return (\n    <Row>\n      <Col xs={12} sm={12} md={12} lg={2} xl={2}>\n        <BlogNav />\n      </Col>\n      <Col xs={12} sm={12} md={12} lg={10} xl={10}>\n        <Switch>\n          <Route path={`/blog/topics/:topic`}>\n            <BlogPostsByTopic />\n          </Route>\n          <Route path={`/blog/archive`}>\n            <BlogPostsArchive />\n          </Route>\n          <Route path={`/blog/topics`}>\n            <BlogTopics />\n          </Route>\n          <Route path={`/blog/posts/:slug`}>\n            <BlogPostBySlug />\n          </Route>\n          <Route exact path={`/blog`}>\n            <BlogPosts />\n          </Route>\n        </Switch>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Blog;\n","import React from 'react';\n\nconst Portfolio = () => {\n    return (\n        <span>Under Construction.</span>\n    )\n};\n\nexport default Portfolio;","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter, faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nconst Home = () => {\n    return (\n        <Jumbotron>\n        <h1>Hi, I'm Anas Najaa.</h1>\n        <p>\n            I'm a software developer based in Kuwait.<br/>\n            I'm currently interested in building simple to use APIs and SPAs.<br/>\n            <br/>\n            <a style={{textDecoration: \"none\", color:\"#1DA1F2\"}} className=\"h4\" href=\"https://twitter.com/spidernet12\">\n                <FontAwesomeIcon icon={faTwitter} />\n            </a>\n            <span>&nbsp;&nbsp;</span>\n            <a style={{textDecoration: \"none\", color:\"#2867B2\"}} className=\"h4\" href=\"https://www.linkedin.com/in/anasnajaa\">\n                <FontAwesomeIcon icon={faLinkedin} />\n            </a>\n            <span>&nbsp;&nbsp;</span>\n            <a style={{textDecoration: \"none\", color:\"#24292e\"}} className=\"h4\" href=\"https://github.com/anasnajaa\">\n                <FontAwesomeIcon icon={faGithub} />\n            </a>\n            <span>&nbsp;&nbsp;</span>\n            <a style={{textDecoration: \"none\", color:\"#D44638\"}} className=\"h4\" href=\"mailto:anas.najaa@outlook.com\">\n                <FontAwesomeIcon icon={faEnvelope} />\n            </a>\n        </p>\n        \n        </Jumbotron>\n    )\n};\n\nexport default Home;","import React from \"react\";\n\nconst Portfolio = () => {\n  return (\n    <>\n      <span>404 Error</span>\n      <span>Page Not Found</span>\n    </>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { IndexLinkContainer, LinkContainer } from \"react-router-bootstrap\";\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst NavigationBar = () => (\n  <Navbar className=\"fixed-top\" bg=\"light\" expand=\"lg\">\n    <Container>\n      <IndexLinkContainer to=\"/\">\n        <Navbar.Brand>Anas Najaa</Navbar.Brand>\n      </IndexLinkContainer>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <IndexLinkContainer to=\"/\">\n            <Nav.Link>Home</Nav.Link>\n          </IndexLinkContainer>\n          <LinkContainer to=\"/blog\">\n            <Nav.Link>Blog</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/services\">\n            <Nav.Link>Services</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/portfolio\">\n            <Nav.Link>Portfolio</Nav.Link>\n          </LinkContainer>\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n);\n\nexport default NavigationBar;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Accordion, Card, Button, Jumbotron } from \"react-bootstrap\";\nimport Loading from \"../Loading/index\";\nimport Alert from \"../Alert/index\";\nimport { getPageData } from \"../../api/blog\";\nimport { parseServicePage } from '../PagesMapping/index';\nconst Services = () => {\n  \n  const [error, setError] = useState(null);\n  const [headerCardContent, setHeaderCardContent] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [servicesCards, setServicesCards] = useState([]);\n\n  const ServiceElement = ({card}) => {\n    return (\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"outline\" eventKey={card.id}>\n              {card.title}\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey={card.id}>\n            <Card.Body>\n            <div dangerouslySetInnerHTML={{ __html: card.html }} />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n    )\n  }\n\n  const loadPageData = async () => {\n    try {\n      const response = await getPageData(\"services-page\");\n      const pageContent = parseServicePage(response.pages);\n      setHeaderCardContent(pageContent.headerCard);\n      console.log(pageContent.services);\n      setServicesCards(pageContent.services);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    loadPageData();\n  }, []);\n\n  if (error) {\n    return (\n      <Row>\n        <Col>\n          <Alert title={\"API Error\"} message={error.message} type=\"danger\" />\n        </Col>\n      </Row>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Loading />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <Row>\n      <Col xs=\"12\">\n        <Jumbotron>\n          <h1>{headerCardContent.title}</h1>\n          <div dangerouslySetInnerHTML={{ __html: headerCardContent.html }} />\n        </Jumbotron>\n      </Col>\n      <Col xs=\"12\">\n        <Row>\n        <Col xs=\"12\" sm=\"12\" md=\"12\" xl=\"6\" lg=\"6\">\n          <h4>Services I provide</h4>\n          <Accordion defaultActiveKey={servicesCards[0].id}>\n            {servicesCards.map((card) => {\n              return <ServiceElement key={card.id} card={card} />\n            })}\n          </Accordion>\n        </Col>\n          <Col xs=\"12\" sm=\"12\" md=\"12\" xl=\"6\" lg=\"6\">\n            <h4>Place a request</h4>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Services;\n","export const parseServicePage = (pages) => {\n    const headerSectionId       = \"5f9040ca5d24f1001e75ee71\";\n    const teachingProgramming   = \"5f904a755d24f1001e75eeb5\";\n    const developmentProject    = \"5f904b025d24f1001e75eec3\";\n    const generalIt             = \"5f904bd15d24f1001e75eeed\";\n\n    const headerCard = pages.find((x) => x.id === headerSectionId);\n    const services = pages.filter((x) => {\n        return (x.id === teachingProgramming ||\n        x.id === developmentProject ||\n        x.id === generalIt);\n    });\n    return {\n        headerCard,\n        services\n    }\n}","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./App.scss\";\n\nimport Blog from \"./components/Blog/index\";\nimport Portfolio from \"./components/Portfolio/index\";\nimport Home from \"./components/Home/index\";\nimport PageNotFound from './components/PageNotFound/index';\nimport NavigationBar from './components/NavBar';\nimport Services from './components/Services/index';\n\nconst App = () => (\n  <Router>\n    <NavigationBar/>\n    <Container className=\"p-3 mt-5\">\n      <Switch>\n        <Route exact path=\"/\"><Home /></Route>\n        <Route path=\"/blog\"><Blog /></Route>\n        <Route path=\"/portfolio\"><Portfolio /></Route>\n        <Route path=\"/services\"><Services /></Route>\n        <Route path=\"*\">\n            <PageNotFound />\n        </Route>\n      </Switch>\n    </Container>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  //<React.StrictMode> temporary fix for bootstrap warnings\n    <App />\n  //</React.StrictMode>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}